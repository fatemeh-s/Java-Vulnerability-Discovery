digraph BenchmarkTest01268_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  String param = request.getParameter('vector')"];
  v7  [label="44:  if (param == null)"];
  v8  [label="THEN"];
  v9  [label="44:  param = ''"];
  v10  [label="46:  String bar = new Test().doSomething(param)"];
  v11  [label="48:  int length = 1"];
  v12  [label="49:  if (bar != null)"];
  v13  [label="THEN"];
  v14  [label="50:  length = bar.length()"];
  v15  [label="51:  response.getWriter().write(bar, 0, length)"];
  v16  [label="exit"];
  v17  [label="57:  String doSomething(String param)"];
  v18  [label="60:  String a7554 = param"];
  v19  [label="61:  StringBuilder b7554 = new StringBuilder(a7554)"];
  v20  [label="62:  b7554.append(' SafeStuff')"];
  v21  [label="63:  b7554.replace(b7554.length()-'Chars'.length(),b7554.length(),'Chars')"];
  v22  [label="64:  java.util.HashMap<String,Object> map7554 = new java.util.HashMap<String,Object>()"];
  v23  [label="65:  map7554.put('key7554', b7554.toString())"];
  v24  [label="66:  String c7554 = (String)map7554.get('key7554')"];
  v25  [label="67:  String d7554 = c7554.substring(0,c7554.length()-1)"];
  v26  [label="68:  String e7554 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d7554.getBytes() ) ))"];
  v27  [label="70:  String f7554 = e7554.split(' ')[0]"];
  v28  [label="71:  org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"];
  v29  [label="72:  String bar = thing.doSomething(f7554)"];
  v30  [label="74:  return bar;"];
  v31  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v7 -> v8  [label="True"];
  v8 -> v9;
  v4 -> v10;
  v4 -> v11;
  v4 -> v12;
  v12 -> v13  [label="True"];
  v13 -> v14;
  v13 -> v15;
  v4 -> v16;
  v17 -> v18;
  v17 -> v19;
  v17 -> v20;
  v17 -> v21;
  v17 -> v22;
  v17 -> v23;
  v17 -> v24;
  v17 -> v25;
  v17 -> v26;
  v17 -> v27;
  v17 -> v28;
  v17 -> v29;
  v17 -> v30;
  v17 -> v31;
  // end-of-graph
}
