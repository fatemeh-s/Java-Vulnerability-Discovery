digraph BenchmarkTest00379_PDG_DATA {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  String param = request.getParameter('vector')"];
  v6  [label="44:  if (param == null)"];
  v7  [label="44:  param = ''"];
  v8  [label="endif"];
  v9  [label="48:  String a45650 = param"];
  v10  [label="49:  StringBuilder b45650 = new StringBuilder(a45650)"];
  v11  [label="50:  b45650.append(' SafeStuff')"];
  v12  [label="51:  b45650.replace(b45650.length()-'Chars'.length(),b45650.length(),'Chars')"];
  v13  [label="52:  java.util.HashMap<String,Object> map45650 = new java.util.HashMap<String,Object>()"];
  v14  [label="53:  map45650.put('key45650', b45650.toString())"];
  v15  [label="54:  String c45650 = (String)map45650.get('key45650')"];
  v16  [label="55:  String d45650 = c45650.substring(0,c45650.length()-1)"];
  v17  [label="56:  String e45650 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d45650.getBytes() ) ))"];
  v18  [label="58:  String f45650 = e45650.split(' ')[0]"];
  v19  [label="59:  org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"];
  v20  [label="60:  String g45650 = 'barbarians_at_the_gate'"];
  v21  [label="61:  String bar = thing.doSomething(g45650)"];
  v22  [label="64:  response.getWriter().print(bar.toCharArray())"];
  // graph-edges
  v1 -> v2  [arrowhead=empty, color=gray, style=dashed, label=""];
  v3 -> v4  [arrowhead=empty, color=gray, style=dashed, label=""];
  v4 -> v5  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v6  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v7  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v7 -> v8  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v8  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v8 -> v9  [arrowhead=empty, color=gray, style=dashed, label=""];
  v9 -> v10  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v11  [arrowhead=empty, color=gray, style=dashed, label=""];
  v11 -> v12  [arrowhead=empty, color=gray, style=dashed, label=""];
  v12 -> v13  [arrowhead=empty, color=gray, style=dashed, label=""];
  v13 -> v14  [arrowhead=empty, color=gray, style=dashed, label=""];
  v14 -> v15  [arrowhead=empty, color=gray, style=dashed, label=""];
  v15 -> v16  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v17  [arrowhead=empty, color=gray, style=dashed, label=""];
  v17 -> v18  [arrowhead=empty, color=gray, style=dashed, label=""];
  v18 -> v19  [arrowhead=empty, color=gray, style=dashed, label=""];
  v19 -> v20  [arrowhead=empty, color=gray, style=dashed, label=""];
  v20 -> v21  [arrowhead=empty, color=gray, style=dashed, label=""];
  v21 -> v22  [arrowhead=empty, color=gray, style=dashed, label=""];
   v1 -> v2   [style=bold, label=" (request)"];
   v1 -> v2   [style=bold, label=" (response)"];
   v3 -> v5   [style=bold, label=" (request)"];
   v3 -> v4   [style=bold, label=" (response)"];
   v3 -> v22   [style=bold, label=" (response)"];
   v5 -> v6   [style=bold, label=" (param)"];
   v5 -> v9   [style=bold, label=" (param)"];
   v9 -> v10   [style=bold, label=" (a45650)"];
   v10 -> v11   [style=bold, label=" (b45650)"];
   v11 -> v12   [style=bold, label=" (b45650)"];
   v11 -> v14   [style=bold, label=" (b45650)"];
   v13 -> v14   [style=bold, label=" (map45650)"];
   v13 -> v15   [style=bold, label=" (map45650)"];
   v15 -> v16   [style=bold, label=" (c45650)"];
   v16 -> v17   [style=bold, label=" (d45650)"];
   v17 -> v18   [style=bold, label=" (e45650)"];
   v19 -> v21   [style=bold, label=" (thing)"];
   v20 -> v21   [style=bold, label=" (g45650)"];
   v21 -> v22   [style=bold, label=" (bar)"];
   v7 -> v9   [style=bold, label=" (param)"];
  // end-of-graph
}
