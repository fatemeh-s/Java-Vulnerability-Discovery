digraph BenchmarkTest02408_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  org.owasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request )"];
  v7  [label="44:  String param = scr.getTheParameter('vector')"];
  v8  [label="45:  if (param == null)"];
  v9  [label="THEN"];
  v10  [label="45:  param = ''"];
  v11  [label="47:  String bar = doSomething(param)"];
  v12  [label="49:  response.getWriter().write(bar.toCharArray())"];
  v13  [label="exit"];
  v14  [label="52:  String doSomething(String param)"];
  v15  [label="55:  String a37761 = param"];
  v16  [label="56:  StringBuilder b37761 = new StringBuilder(a37761)"];
  v17  [label="57:  b37761.append(' SafeStuff')"];
  v18  [label="58:  b37761.replace(b37761.length()-'Chars'.length(),b37761.length(),'Chars')"];
  v19  [label="59:  java.util.HashMap<String,Object> map37761 = new java.util.HashMap<String,Object>()"];
  v20  [label="60:  map37761.put('key37761', b37761.toString())"];
  v21  [label="61:  String c37761 = (String)map37761.get('key37761')"];
  v22  [label="62:  String d37761 = c37761.substring(0,c37761.length()-1)"];
  v23  [label="63:  String e37761 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d37761.getBytes() ) ))"];
  v24  [label="65:  String f37761 = e37761.split(' ')[0]"];
  v25  [label="66:  org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"];
  v26  [label="67:  String g37761 = 'barbarians_at_the_gate'"];
  v27  [label="68:  String bar = thing.doSomething(g37761)"];
  v28  [label="70:  return bar;"];
  v29  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v8 -> v9  [label="True"];
  v9 -> v10;
  v4 -> v11;
  v4 -> v12;
  v4 -> v13;
  v14 -> v15;
  v14 -> v16;
  v14 -> v17;
  v14 -> v18;
  v14 -> v19;
  v14 -> v20;
  v14 -> v21;
  v14 -> v22;
  v14 -> v23;
  v14 -> v24;
  v14 -> v25;
  v14 -> v26;
  v14 -> v27;
  v14 -> v28;
  v14 -> v29;
  // end-of-graph
}
