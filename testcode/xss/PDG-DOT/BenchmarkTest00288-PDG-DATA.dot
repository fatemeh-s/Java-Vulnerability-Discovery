digraph BenchmarkTest00288_PDG_DATA {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  String param = ''"];
  v6  [label="44:  java.util.Enumeration<String> headers = request.getHeaders('referer')"];
  v7  [label="45:  if (headers.hasMoreElements())"];
  v8  [label="46:  param = headers.nextElement()"];
  v9  [label="endif"];
  v10  [label="48:  param = java.net.URLDecoder.decode(param, 'UTF-8')"];
  v11  [label="52:  String bar = 'safe!'"];
  v12  [label="53:  java.util.HashMap<String,Object> map60928 = new java.util.HashMap<String,Object>()"];
  v13  [label="54:  map60928.put('keyA-60928', 'a_Value')"];
  v14  [label="55:  map60928.put('keyB-60928', param)"];
  v15  [label="56:  map60928.put('keyC', 'another_Value')"];
  v16  [label="57:  bar = (String)map60928.get('keyB-60928')"];
  v17  [label="58:  bar = (String)map60928.get('keyA-60928')"];
  v18  [label="61:  int length = 1"];
  v19  [label="62:  if (bar != null)"];
  v20  [label="63:  length = bar.length()"];
  v21  [label="64:  response.getWriter().write(bar.toCharArray(),0,length)"];
  v22  [label="endif"];
  // graph-edges
  v1 -> v2  [arrowhead=empty, color=gray, style=dashed, label=""];
  v3 -> v4  [arrowhead=empty, color=gray, style=dashed, label=""];
  v4 -> v5  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v6  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v7  [arrowhead=empty, color=gray, style=dashed, label=""];
  v7 -> v8  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v8 -> v9  [arrowhead=empty, color=gray, style=dashed, label=""];
  v7 -> v9  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v9 -> v10  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v11  [arrowhead=empty, color=gray, style=dashed, label=""];
  v11 -> v12  [arrowhead=empty, color=gray, style=dashed, label=""];
  v12 -> v13  [arrowhead=empty, color=gray, style=dashed, label=""];
  v13 -> v14  [arrowhead=empty, color=gray, style=dashed, label=""];
  v14 -> v15  [arrowhead=empty, color=gray, style=dashed, label=""];
  v15 -> v16  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v17  [arrowhead=empty, color=gray, style=dashed, label=""];
  v17 -> v18  [arrowhead=empty, color=gray, style=dashed, label=""];
  v18 -> v19  [arrowhead=empty, color=gray, style=dashed, label=""];
  v19 -> v20  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v20 -> v21  [arrowhead=empty, color=gray, style=dashed, label=""];
  v21 -> v22  [arrowhead=empty, color=gray, style=dashed, label=""];
  v19 -> v22  [arrowhead=empty, color=gray, style=dashed, label="False"];
   v1 -> v2   [style=bold, label=" (request)"];
   v1 -> v2   [style=bold, label=" (response)"];
   v3 -> v6   [style=bold, label=" (request)"];
   v3 -> v4   [style=bold, label=" (response)"];
   v3 -> v21   [style=bold, label=" (response)"];
   v5 -> v10   [style=bold, label=" (param)"];
   v6 -> v7   [style=bold, label=" (headers)"];
   v6 -> v8   [style=bold, label=" (headers)"];
   v10 -> v14   [style=bold, label=" (param)"];
   v12 -> v13   [style=bold, label=" (map60928)"];
   v12 -> v14   [style=bold, label=" (map60928)"];
   v12 -> v15   [style=bold, label=" (map60928)"];
   v12 -> v16   [style=bold, label=" (map60928)"];
   v12 -> v17   [style=bold, label=" (map60928)"];
   v17 -> v19   [style=bold, label=" (bar)"];
   v17 -> v20   [style=bold, label=" (bar)"];
   v17 -> v21   [style=bold, label=" (bar)"];
   v20 -> v21   [style=bold, label=" (length)"];
   v8 -> v10   [style=bold, label=" (param)"];
  // end-of-graph
}
