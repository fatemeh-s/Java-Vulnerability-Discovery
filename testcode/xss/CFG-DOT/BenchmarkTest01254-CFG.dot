digraph BenchmarkTest01254_CFG {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  String param = request.getParameter('vector')"];
  v6  [label="44:  if (param == null)"];
  v7  [label="44:  param = ''"];
  v8  [label="endif"];
  v9  [label="46:  String bar = new Test().doSomething(param)"];
  v10  [label="48:  response.getWriter().print(bar.toCharArray())"];
  v11  [label="53:  String doSomething(String param)"];
  v12  [label="56:  String a23740 = param"];
  v13  [label="57:  StringBuilder b23740 = new StringBuilder(a23740)"];
  v14  [label="58:  b23740.append(' SafeStuff')"];
  v15  [label="59:  b23740.replace(b23740.length()-'Chars'.length(),b23740.length(),'Chars')"];
  v16  [label="60:  java.util.HashMap<String,Object> map23740 = new java.util.HashMap<String,Object>()"];
  v17  [label="61:  map23740.put('key23740', b23740.toString())"];
  v18  [label="62:  String c23740 = (String)map23740.get('key23740')"];
  v19  [label="63:  String d23740 = c23740.substring(0,c23740.length()-1)"];
  v20  [label="64:  String e23740 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d23740.getBytes() ) ))"];
  v21  [label="66:  String f23740 = e23740.split(' ')[0]"];
  v22  [label="67:  org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"];
  v23  [label="68:  String bar = thing.doSomething(f23740)"];
  v24  [label="70:  return bar;"];
  // graph-edges
  v1 -> v2;
  v3 -> v4;
  v4 -> v5;
  v5 -> v6;
  v6 -> v7  [label="True"];
  v7 -> v8;
  v6 -> v8  [label="False"];
  v8 -> v9;
  v9 -> v10;
  v11 -> v12;
  v12 -> v13;
  v13 -> v14;
  v14 -> v15;
  v15 -> v16;
  v16 -> v17;
  v17 -> v18;
  v18 -> v19;
  v19 -> v20;
  v20 -> v21;
  v21 -> v22;
  v22 -> v23;
  v23 -> v24;
  // end-of-graph
}
