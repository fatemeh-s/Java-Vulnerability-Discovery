{
  "type": "CFG",
  "file": "BenchmarkTest00330.java",


  "nodes": [
    {
      "id": "n1",
      "line": "35",
      "code": "void doGet(HttpServletRequest request, HttpServletResponse response)"
    },
    {
      "id": "n2",
      "line": "36",
      "code": "doPost(request, response)"
    },
    {
      "id": "n3",
      "line": "40",
      "code": "void doPost(HttpServletRequest request, HttpServletResponse response)"
    },
    {
      "id": "n4",
      "line": "41",
      "code": "response.setContentType(\"text/html\")"
    },
    {
      "id": "n5",
      "line": "43",
      "code": "String param = \"\""
    },
    {
      "id": "n6",
      "line": "44",
      "code": "java.util.Enumeration<String> headers = request.getHeaders(\"vector\")"
    },
    {
      "id": "n7",
      "line": "45",
      "code": "if (headers.hasMoreElements())"
    },
    {
      "id": "n8",
      "line": "46",
      "code": "param = headers.nextElement()"
    },
    {
      "id": "n9",
      "line": "0",
      "code": "endif"
    },
    {
      "id": "n10",
      "line": "48",
      "code": "param = java.net.URLDecoder.decode(param, \"UTF-8\")"
    },
    {
      "id": "n11",
      "line": "53",
      "code": "String a6435 = param"
    },
    {
      "id": "n12",
      "line": "54",
      "code": "StringBuilder b6435 = new StringBuilder(a6435)"
    },
    {
      "id": "n13",
      "line": "55",
      "code": "b6435.append(\" SafeStuff\")"
    },
    {
      "id": "n14",
      "line": "56",
      "code": "b6435.replace(b6435.length()-\"Chars\".length(),b6435.length(),\"Chars\")"
    },
    {
      "id": "n15",
      "line": "57",
      "code": "java.util.HashMap<String,Object> map6435 = new java.util.HashMap<String,Object>()"
    },
    {
      "id": "n16",
      "line": "58",
      "code": "map6435.put(\"key6435\", b6435.toString())"
    },
    {
      "id": "n17",
      "line": "59",
      "code": "String c6435 = (String)map6435.get(\"key6435\")"
    },
    {
      "id": "n18",
      "line": "60",
      "code": "String d6435 = c6435.substring(0,c6435.length()-1)"
    },
    {
      "id": "n19",
      "line": "61",
      "code": "String e6435 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d6435.getBytes() ) ))"
    },
    {
      "id": "n20",
      "line": "63",
      "code": "String f6435 = e6435.split(\" \")[0]"
    },
    {
      "id": "n21",
      "line": "64",
      "code": "org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"
    },
    {
      "id": "n22",
      "line": "65",
      "code": "String g6435 = \"barbarians_at_the_gate\""
    },
    {
      "id": "n23",
      "line": "66",
      "code": "String bar = thing.doSomething(g6435)"
    },
    {
      "id": "n24",
      "line": "69",
      "code": "String sql = \"{call \" + bar + \"}\""
    },
    {
      "id": "n25",
      "line": "71",
      "code": "try"
    },
    {
      "id": "n26",
      "line": "0",
      "code": "end-try"
    },
    {
      "id": "n27",
      "line": "72",
      "code": "java.sql.Connection connection = org.owasp.benchmark.helpers.DatabaseHelper.getSqlConnection()"
    },
    {
      "id": "n28",
      "line": "73",
      "code": "java.sql.CallableStatement statement = connection.prepareCall( sql )"
    },
    {
      "id": "n29",
      "line": "74",
      "code": "java.sql.ResultSet rs = statement.executeQuery()"
    },
    {
      "id": "n30",
      "line": "75",
      "code": "org.owasp.benchmark.helpers.DatabaseHelper.printResults(rs, sql, response)"
    },
    {
      "id": "n31",
      "line": "0",
      "code": "end-catch"
    },
    {
      "id": "n32",
      "line": "77",
      "code": "catch (java.sql.SQLException e)"
    },
    {
      "id": "n33",
      "line": "78",
      "code": "if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"
    },
    {
      "id": "n34",
      "line": "79",
      "code": "response.getWriter().println(\"Error processing request.\")"
    },
    {
      "id": "n35",
      "line": "80",
      "code": "return;"
    },
    {
      "id": "n36",
      "line": "0",
      "code": "endif"
    },
    {
      "id": "n37",
      "line": "82",
      "code": "throw new ServletException(e)"
    },
  ],


  "edges": [
    {
      "id": "e1",
      "source": "n1",
      "target": "n2",
      "label": ""
    },
    {
      "id": "e2",
      "source": "n3",
      "target": "n4",
      "label": ""
    },
    {
      "id": "e3",
      "source": "n4",
      "target": "n5",
      "label": ""
    },
    {
      "id": "e4",
      "source": "n5",
      "target": "n6",
      "label": ""
    },
    {
      "id": "e5",
      "source": "n6",
      "target": "n7",
      "label": ""
    },
    {
      "id": "e6",
      "source": "n7",
      "target": "n8",
      "label": "True"
    },
    {
      "id": "e7",
      "source": "n8",
      "target": "n9",
      "label": ""
    },
    {
      "id": "e8",
      "source": "n7",
      "target": "n9",
      "label": "False"
    },
    {
      "id": "e9",
      "source": "n9",
      "target": "n10",
      "label": ""
    },
    {
      "id": "e10",
      "source": "n10",
      "target": "n11",
      "label": ""
    },
    {
      "id": "e11",
      "source": "n11",
      "target": "n12",
      "label": ""
    },
    {
      "id": "e12",
      "source": "n12",
      "target": "n13",
      "label": ""
    },
    {
      "id": "e13",
      "source": "n13",
      "target": "n14",
      "label": ""
    },
    {
      "id": "e14",
      "source": "n14",
      "target": "n15",
      "label": ""
    },
    {
      "id": "e15",
      "source": "n15",
      "target": "n16",
      "label": ""
    },
    {
      "id": "e16",
      "source": "n16",
      "target": "n17",
      "label": ""
    },
    {
      "id": "e17",
      "source": "n17",
      "target": "n18",
      "label": ""
    },
    {
      "id": "e18",
      "source": "n18",
      "target": "n19",
      "label": ""
    },
    {
      "id": "e19",
      "source": "n19",
      "target": "n20",
      "label": ""
    },
    {
      "id": "e20",
      "source": "n20",
      "target": "n21",
      "label": ""
    },
    {
      "id": "e21",
      "source": "n21",
      "target": "n22",
      "label": ""
    },
    {
      "id": "e22",
      "source": "n22",
      "target": "n23",
      "label": ""
    },
    {
      "id": "e23",
      "source": "n23",
      "target": "n24",
      "label": ""
    },
    {
      "id": "e24",
      "source": "n24",
      "target": "n25",
      "label": ""
    },
    {
      "id": "e25",
      "source": "n25",
      "target": "n27",
      "label": ""
    },
    {
      "id": "e26",
      "source": "n27",
      "target": "n28",
      "label": ""
    },
    {
      "id": "e27",
      "source": "n28",
      "target": "n29",
      "label": ""
    },
    {
      "id": "e28",
      "source": "n29",
      "target": "n30",
      "label": ""
    },
    {
      "id": "e29",
      "source": "n30",
      "target": "n26",
      "label": ""
    },
    {
      "id": "e30",
      "source": "n26",
      "target": "n32",
      "label": "Throws"
    },
    {
      "id": "e31",
      "source": "n32",
      "target": "n33",
      "label": ""
    },
    {
      "id": "e32",
      "source": "n33",
      "target": "n34",
      "label": "True"
    },
    {
      "id": "e33",
      "source": "n34",
      "target": "n35",
      "label": ""
    },
    {
      "id": "e34",
      "source": "n33",
      "target": "n37",
      "label": "False"
    },
    {
      "id": "e35",
      "source": "n37",
      "target": "n26",
      "label": "Throws"
    },
    {
      "id": "e36",
      "source": "n36",
      "target": "n31",
      "label": ""
    },
    {
      "id": "e37",
      "source": "n31",
      "target": "n26",
      "label": ""
    },
  ]
}
