{
  "type": "CFG",
  "file": "BenchmarkTest01469.java",


  "nodes": [
    {
      "id": "n1",
      "line": "35",
      "code": "void doGet(HttpServletRequest request, HttpServletResponse response)"
    },
    {
      "id": "n2",
      "line": "36",
      "code": "doPost(request, response)"
    },
    {
      "id": "n3",
      "line": "40",
      "code": "void doPost(HttpServletRequest request, HttpServletResponse response)"
    },
    {
      "id": "n4",
      "line": "41",
      "code": "response.setContentType(\"text/html\")"
    },
    {
      "id": "n5",
      "line": "43",
      "code": "String param = \"\""
    },
    {
      "id": "n6",
      "line": "44",
      "code": "boolean flag = true"
    },
    {
      "id": "n7",
      "line": "45",
      "code": "java.util.Enumeration<String> names = request.getParameterNames()"
    },
    {
      "id": "n8",
      "line": "46",
      "code": "while (names.hasMoreElements() && flag)"
    },
    {
      "id": "n9",
      "line": "0",
      "code": "endwhile"
    },
    {
      "id": "n10",
      "line": "47",
      "code": "String name = (String) names.nextElement()"
    },
    {
      "id": "n11",
      "line": "48",
      "code": "String[] values = request.getParameterValues(name)"
    },
    {
      "id": "n12",
      "line": "49",
      "code": "if (values != null)"
    },
    {
      "id": "n13",
      "line": "50",
      "code": "int i=0"
    },
    {
      "id": "n14",
      "line": "50",
      "code": "for (i<values.length && flag)"
    },
    {
      "id": "n15",
      "line": "50",
      "code": "i++"
    },
    {
      "id": "n16",
      "line": "0",
      "code": "endfor"
    },
    {
      "id": "n17",
      "line": "51",
      "code": "String value = values[i]"
    },
    {
      "id": "n18",
      "line": "52",
      "code": "if (value.equals(\"vector\"))"
    },
    {
      "id": "n19",
      "line": "53",
      "code": "param = name"
    },
    {
      "id": "n20",
      "line": "54",
      "code": "flag = false"
    },
    {
      "id": "n21",
      "line": "0",
      "code": "endif"
    },
    {
      "id": "n22",
      "line": "0",
      "code": "endif"
    },
    {
      "id": "n23",
      "line": "60",
      "code": "String bar = new Test().doSomething(param)"
    },
    {
      "id": "n24",
      "line": "62",
      "code": "try"
    },
    {
      "id": "n25",
      "line": "0",
      "code": "end-try"
    },
    {
      "id": "n26",
      "line": "63",
      "code": "String sql = \"SELECT * from USERS where USERNAME='foo' and PASSWORD='\"
	            + bar + \"'\""
    },
    {
      "id": "n27",
      "line": "66",
      "code": "java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql)"
    },
    {
      "id": "n28",
      "line": "67",
      "code": "java.io.PrintWriter out = response.getWriter()"
    },
    {
      "id": "n29",
      "line": "68",
      "code": "out.write(\"Your results are: <br>\")"
    },
    {
      "id": "n30",
      "line": "71",
      "code": "for (Object o:list)"
    },
    {
      "id": "n31",
      "line": "0",
      "code": "endfor"
    },
    {
      "id": "n32",
      "line": "72",
      "code": "out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(o.toString()) + \"<br>\")"
    },
    {
      "id": "n33",
      "line": "0",
      "code": "end-catch"
    },
    {
      "id": "n34",
      "line": "75",
      "code": "catch (org.springframework.dao.DataAccessException e)"
    },
    {
      "id": "n35",
      "line": "76",
      "code": "if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"
    },
    {
      "id": "n36",
      "line": "77",
      "code": "response.getWriter().println(\"Error processing request.\")"
    },
    {
      "id": "n37",
      "line": "78",
      "code": "return;"
    },
    {
      "id": "n38",
      "line": "0",
      "code": "endif"
    },
    {
      "id": "n39",
      "line": "80",
      "code": "throw new ServletException(e)"
    },
    {
      "id": "n40",
      "line": "86",
      "code": "String doSomething(String param)"
    },
    {
      "id": "n41",
      "line": "89",
      "code": "String a66617 = param"
    },
    {
      "id": "n42",
      "line": "90",
      "code": "StringBuilder b66617 = new StringBuilder(a66617)"
    },
    {
      "id": "n43",
      "line": "91",
      "code": "b66617.append(\" SafeStuff\")"
    },
    {
      "id": "n44",
      "line": "92",
      "code": "b66617.replace(b66617.length()-\"Chars\".length(),b66617.length(),\"Chars\")"
    },
    {
      "id": "n45",
      "line": "93",
      "code": "java.util.HashMap<String,Object> map66617 = new java.util.HashMap<String,Object>()"
    },
    {
      "id": "n46",
      "line": "94",
      "code": "map66617.put(\"key66617\", b66617.toString())"
    },
    {
      "id": "n47",
      "line": "95",
      "code": "String c66617 = (String)map66617.get(\"key66617\")"
    },
    {
      "id": "n48",
      "line": "96",
      "code": "String d66617 = c66617.substring(0,c66617.length()-1)"
    },
    {
      "id": "n49",
      "line": "97",
      "code": "String e66617 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d66617.getBytes() ) ))"
    },
    {
      "id": "n50",
      "line": "99",
      "code": "String f66617 = e66617.split(\" \")[0]"
    },
    {
      "id": "n51",
      "line": "100",
      "code": "org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"
    },
    {
      "id": "n52",
      "line": "101",
      "code": "String g66617 = \"barbarians_at_the_gate\""
    },
    {
      "id": "n53",
      "line": "102",
      "code": "String bar = thing.doSomething(g66617)"
    },
    {
      "id": "n54",
      "line": "104",
      "code": "return bar;"
    },
  ],


  "edges": [
    {
      "id": "e1",
      "source": "n1",
      "target": "n2",
      "label": ""
    },
    {
      "id": "e2",
      "source": "n3",
      "target": "n4",
      "label": ""
    },
    {
      "id": "e3",
      "source": "n4",
      "target": "n5",
      "label": ""
    },
    {
      "id": "e4",
      "source": "n5",
      "target": "n6",
      "label": ""
    },
    {
      "id": "e5",
      "source": "n6",
      "target": "n7",
      "label": ""
    },
    {
      "id": "e6",
      "source": "n7",
      "target": "n8",
      "label": ""
    },
    {
      "id": "e7",
      "source": "n8",
      "target": "n9",
      "label": "False"
    },
    {
      "id": "e8",
      "source": "n8",
      "target": "n10",
      "label": "True"
    },
    {
      "id": "e9",
      "source": "n10",
      "target": "n11",
      "label": ""
    },
    {
      "id": "e10",
      "source": "n11",
      "target": "n12",
      "label": ""
    },
    {
      "id": "e11",
      "source": "n12",
      "target": "n13",
      "label": "True"
    },
    {
      "id": "e12",
      "source": "n13",
      "target": "n14",
      "label": ""
    },
    {
      "id": "e13",
      "source": "n14",
      "target": "n16",
      "label": "False"
    },
    {
      "id": "e14",
      "source": "n14",
      "target": "n17",
      "label": "True"
    },
    {
      "id": "e15",
      "source": "n17",
      "target": "n18",
      "label": ""
    },
    {
      "id": "e16",
      "source": "n18",
      "target": "n19",
      "label": "True"
    },
    {
      "id": "e17",
      "source": "n19",
      "target": "n20",
      "label": ""
    },
    {
      "id": "e18",
      "source": "n20",
      "target": "n21",
      "label": ""
    },
    {
      "id": "e19",
      "source": "n18",
      "target": "n21",
      "label": "False"
    },
    {
      "id": "e20",
      "source": "n21",
      "target": "n15",
      "label": ""
    },
    {
      "id": "e21",
      "source": "n15",
      "target": "n14",
      "label": ""
    },
    {
      "id": "e22",
      "source": "n16",
      "target": "n22",
      "label": ""
    },
    {
      "id": "e23",
      "source": "n12",
      "target": "n22",
      "label": "False"
    },
    {
      "id": "e24",
      "source": "n22",
      "target": "n8",
      "label": ""
    },
    {
      "id": "e25",
      "source": "n9",
      "target": "n23",
      "label": ""
    },
    {
      "id": "e26",
      "source": "n23",
      "target": "n24",
      "label": ""
    },
    {
      "id": "e27",
      "source": "n24",
      "target": "n26",
      "label": ""
    },
    {
      "id": "e28",
      "source": "n26",
      "target": "n27",
      "label": ""
    },
    {
      "id": "e29",
      "source": "n27",
      "target": "n28",
      "label": ""
    },
    {
      "id": "e30",
      "source": "n28",
      "target": "n29",
      "label": ""
    },
    {
      "id": "e31",
      "source": "n29",
      "target": "n30",
      "label": ""
    },
    {
      "id": "e32",
      "source": "n30",
      "target": "n31",
      "label": "False"
    },
    {
      "id": "e33",
      "source": "n30",
      "target": "n32",
      "label": "True"
    },
    {
      "id": "e34",
      "source": "n32",
      "target": "n30",
      "label": ""
    },
    {
      "id": "e35",
      "source": "n31",
      "target": "n25",
      "label": ""
    },
    {
      "id": "e36",
      "source": "n25",
      "target": "n34",
      "label": "Throws"
    },
    {
      "id": "e37",
      "source": "n34",
      "target": "n35",
      "label": ""
    },
    {
      "id": "e38",
      "source": "n35",
      "target": "n36",
      "label": "True"
    },
    {
      "id": "e39",
      "source": "n36",
      "target": "n37",
      "label": ""
    },
    {
      "id": "e40",
      "source": "n35",
      "target": "n39",
      "label": "False"
    },
    {
      "id": "e41",
      "source": "n39",
      "target": "n25",
      "label": "Throws"
    },
    {
      "id": "e42",
      "source": "n38",
      "target": "n33",
      "label": ""
    },
    {
      "id": "e43",
      "source": "n33",
      "target": "n25",
      "label": ""
    },
    {
      "id": "e44",
      "source": "n40",
      "target": "n41",
      "label": ""
    },
    {
      "id": "e45",
      "source": "n41",
      "target": "n42",
      "label": ""
    },
    {
      "id": "e46",
      "source": "n42",
      "target": "n43",
      "label": ""
    },
    {
      "id": "e47",
      "source": "n43",
      "target": "n44",
      "label": ""
    },
    {
      "id": "e48",
      "source": "n44",
      "target": "n45",
      "label": ""
    },
    {
      "id": "e49",
      "source": "n45",
      "target": "n46",
      "label": ""
    },
    {
      "id": "e50",
      "source": "n46",
      "target": "n47",
      "label": ""
    },
    {
      "id": "e51",
      "source": "n47",
      "target": "n48",
      "label": ""
    },
    {
      "id": "e52",
      "source": "n48",
      "target": "n49",
      "label": ""
    },
    {
      "id": "e53",
      "source": "n49",
      "target": "n50",
      "label": ""
    },
    {
      "id": "e54",
      "source": "n50",
      "target": "n51",
      "label": ""
    },
    {
      "id": "e55",
      "source": "n51",
      "target": "n52",
      "label": ""
    },
    {
      "id": "e56",
      "source": "n52",
      "target": "n53",
      "label": ""
    },
    {
      "id": "e57",
      "source": "n53",
      "target": "n54",
      "label": ""
    },
  ]
}
