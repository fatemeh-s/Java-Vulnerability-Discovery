digraph BenchmarkTest02539_CFG {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  String[] values = request.getParameterValues('vector')"];
  v6  [label="44:  String param"];
  v7  [label="45:  if (values != null && values.length > 0)"];
  v8  [label="46:  param = values[0]"];
  v9  [label="endif"];
  v10  [label="47:  param = ''"];
  v11  [label="49:  String bar = doSomething(param)"];
  v12  [label="51:  try"];
  v13  [label="end-try"];
  v14  [label="52:  String sql = 'SELECT  * from USERS where USERNAME='foo' and PASSWORD=''+ bar + '''"];
  v15  [label="54:  org.springframework.jdbc.support.rowset.SqlRowSet results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql)"];
  v16  [label="55:  java.io.PrintWriter out = response.getWriter()"];
  v17  [label="56:  out.write('Your results are: ')"];
  v18  [label="58:  while (results.next())"];
  v19  [label="endwhile"];
  v20  [label="59:  out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(results.getString('USERNAME')) + ' ')"];
  v21  [label="end-catch"];
  v22  [label="62:  catch (org.springframework.dao.DataAccessException e)"];
  v23  [label="63:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v24  [label="64:  response.getWriter().println('Error processing request.')"];
  v25  [label="65:  return;"];
  v26  [label="endif"];
  v27  [label="67:  throw new ServletException(e)"];
  v28  [label="71:  String doSomething(String param)"];
  v29  [label="74:  String a14444 = param"];
  v30  [label="75:  StringBuilder b14444 = new StringBuilder(a14444)"];
  v31  [label="76:  b14444.append(' SafeStuff')"];
  v32  [label="77:  b14444.replace(b14444.length()-'Chars'.length(),b14444.length(),'Chars')"];
  v33  [label="78:  java.util.HashMap<String,Object> map14444 = new java.util.HashMap<String,Object>()"];
  v34  [label="79:  map14444.put('key14444', b14444.toString())"];
  v35  [label="80:  String c14444 = (String)map14444.get('key14444')"];
  v36  [label="81:  String d14444 = c14444.substring(0,c14444.length()-1)"];
  v37  [label="82:  String e14444 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d14444.getBytes() ) ))"];
  v38  [label="84:  String f14444 = e14444.split(' ')[0]"];
  v39  [label="85:  org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"];
  v40  [label="86:  String g14444 = 'barbarians_at_the_gate'"];
  v41  [label="87:  String bar = thing.doSomething(g14444)"];
  v42  [label="89:  return bar;"];
  // graph-edges
  v1 -> v2;
  v3 -> v4;
  v4 -> v5;
  v5 -> v6;
  v6 -> v7;
  v7 -> v8  [label="True"];
  v8 -> v9;
  v7 -> v10  [label="False"];
  v10 -> v9;
  v9 -> v11;
  v11 -> v12;
  v12 -> v14;
  v14 -> v15;
  v15 -> v16;
  v16 -> v17;
  v17 -> v18;
  v18 -> v19  [label="False"];
  v18 -> v20  [label="True"];
  v20 -> v18;
  v19 -> v13;
  v13 -> v22  [label="Throws"];
  v22 -> v23;
  v23 -> v24  [label="True"];
  v24 -> v25;
  v23 -> v27  [label="False"];
  v27 -> v13  [label="Throws"];
  v26 -> v21;
  v21 -> v13;
  v28 -> v29;
  v29 -> v30;
  v30 -> v31;
  v31 -> v32;
  v32 -> v33;
  v33 -> v34;
  v34 -> v35;
  v35 -> v36;
  v36 -> v37;
  v37 -> v38;
  v38 -> v39;
  v39 -> v40;
  v40 -> v41;
  v41 -> v42;
  // end-of-graph
}
