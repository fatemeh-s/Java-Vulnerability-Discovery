digraph BenchmarkTest00197_CFG {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  String param = request.getHeader('vector')"];
  v6  [label="44:  if (param == null)"];
  v7  [label="44:  param = ''"];
  v8  [label="endif"];
  v9  [label="45:  param = java.net.URLDecoder.decode(param, 'UTF-8')"];
  v10  [label="47:  if (param == null)"];
  v11  [label="47:  param = ''"];
  v12  [label="endif"];
  v13  [label="50:  String bar = 'alsosafe'"];
  v14  [label="51:  if (param != null)"];
  v15  [label="52:  java.util.List<String> valuesList = new java.util.ArrayList<String>( )"];
  v16  [label="53:  valuesList.add('safe')"];
  v17  [label="54:  valuesList.add( param )"];
  v18  [label="55:  valuesList.add( 'moresafe' )"];
  v19  [label="57:  valuesList.remove(0)"];
  v20  [label="59:  bar = valuesList.get(1)"];
  v21  [label="endif"];
  v22  [label="63:  try"];
  v23  [label="end-try"];
  v24  [label="64:  String sql = 'SELECT * from USERS where USERNAME='foo' and PASSWORD='' + bar + '''"];
  v25  [label="66:  java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {
	            public String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {
	                try {
	                	return rs.getString('USERNAME');
	                } catch (java.sql.SQLException e) {
	                	if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {
	        				return 'Error processing query.';
	        			}
						else throw e;
					}
	            }
	        })"];
  v26  [label="78:  java.io.PrintWriter out = response.getWriter()"];
  v27  [label="80:  out.write('Your results are: ')"];
  v28  [label="82:  for (String s : results)"];
  v29  [label="endfor"];
  v30  [label="83:  out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(s) + '<br>')"];
  v31  [label="end-catch"];
  v32  [label="86:  catch (org.springframework.dao.DataAccessException e)"];
  v33  [label="87:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v34  [label="88:  response.getWriter().println('Error processing request.')"];
  v35  [label="89:  return;"];
  v36  [label="endif"];
  v37  [label="91:  throw new ServletException(e)"];
  // graph-edges
  v1 -> v2;
  v3 -> v4;
  v4 -> v5;
  v5 -> v6;
  v6 -> v7  [label="True"];
  v7 -> v8;
  v6 -> v8  [label="False"];
  v8 -> v9;
  v9 -> v10;
  v10 -> v11  [label="True"];
  v11 -> v12;
  v10 -> v12  [label="False"];
  v12 -> v13;
  v13 -> v14;
  v14 -> v15  [label="True"];
  v15 -> v16;
  v16 -> v17;
  v17 -> v18;
  v18 -> v19;
  v19 -> v20;
  v20 -> v21;
  v14 -> v21  [label="False"];
  v21 -> v22;
  v22 -> v24;
  v24 -> v25;
  v25 -> v26;
  v26 -> v27;
  v27 -> v28;
  v28 -> v29  [label="False"];
  v28 -> v30  [label="True"];
  v30 -> v28;
  v29 -> v23;
  v23 -> v32  [label="Throws"];
  v32 -> v33;
  v33 -> v34  [label="True"];
  v34 -> v35;
  v33 -> v37  [label="False"];
  v37 -> v23  [label="Throws"];
  v36 -> v31;
  v31 -> v23;
  // end-of-graph
}
