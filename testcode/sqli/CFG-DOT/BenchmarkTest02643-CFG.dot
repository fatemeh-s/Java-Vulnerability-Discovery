digraph BenchmarkTest02643_CFG {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  String queryString = request.getQueryString()"];
  v6  [label="44:  String paramval = 'vector'+'='"];
  v7  [label="45:  int paramLoc = -1"];
  v8  [label="46:  if (queryString != null)"];
  v9  [label="46:  paramLoc = queryString.indexOf(paramval)"];
  v10  [label="endif"];
  v11  [label="47:  if (paramLoc == -1)"];
  v12  [label="48:  response.getWriter().println('getQueryString() couldn't find expected parameter '' + 'vector' + '' in query string.')"];
  v13  [label="49:  return;"];
  v14  [label="endif"];
  v15  [label="52:  String param = queryString.substring(paramLoc + paramval.length())"];
  v16  [label="54:  int ampersandLoc = queryString.indexOf('&', paramLoc)"];
  v17  [label="55:  if (ampersandLoc != -1)"];
  v18  [label="56:  param = queryString.substring(paramLoc + paramval.length(), ampersandLoc)"];
  v19  [label="endif"];
  v20  [label="58:  param = java.net.URLDecoder.decode(param, 'UTF-8')"];
  v21  [label="60:  String bar = doSomething(param)"];
  v22  [label="62:  try"];
  v23  [label="end-try"];
  v24  [label="63:  String sql = 'SELECT * from USERS where USERNAME='foo' and PASSWORD=''
	            + bar + '''"];
  v25  [label="66:  java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql)"];
  v26  [label="67:  java.io.PrintWriter out = response.getWriter()"];
  v27  [label="68:  out.write('Your results are: <br>')"];
  v28  [label="71:  for (Object o:list)"];
  v29  [label="endfor"];
  v30  [label="72:  out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(o.toString()) + '<br>')"];
  v31  [label="end-catch"];
  v32  [label="75:  catch (org.springframework.dao.DataAccessException e)"];
  v33  [label="76:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v34  [label="77:  response.getWriter().println('Error processing request.')"];
  v35  [label="78:  return;"];
  v36  [label="endif"];
  v37  [label="80:  throw new ServletException(e)"];
  v38  [label="84:  String doSomething(String param)"];
  v39  [label="86:  String bar"];
  v40  [label="87:  String guess = 'ABC'"];
  v41  [label="88:  char switchTarget = guess.charAt(2)"];
  v42  [label="91:  switch (switchTarget)"];
  v43  [label="end-switch"];
  v44  [label="92:  case 'A':"];
  v45  [label="93:  bar = param"];
  v46  [label="94:  break;"];
  v47  [label="95:  case 'B':"];
  v48  [label="96:  bar = 'bobs_your_uncle'"];
  v49  [label="97:  break;"];
  v50  [label="98:  case 'C':"];
  v51  [label="99:  case 'D':"];
  v52  [label="100:  bar = param"];
  v53  [label="101:  break;"];
  v54  [label="102:  default:"];
  v55  [label="103:  bar = 'bobs_your_uncle'"];
  v56  [label="104:  break;"];
  v57  [label="107:  return bar;"];
  // graph-edges
  v1 -> v2;
  v3 -> v4;
  v4 -> v5;
  v5 -> v6;
  v6 -> v7;
  v7 -> v8;
  v8 -> v9  [label="True"];
  v9 -> v10;
  v8 -> v10  [label="False"];
  v10 -> v11;
  v11 -> v12  [label="True"];
  v12 -> v13;
  v11 -> v14  [label="False"];
  v14 -> v15;
  v15 -> v16;
  v16 -> v17;
  v17 -> v18  [label="True"];
  v18 -> v19;
  v17 -> v19  [label="False"];
  v19 -> v20;
  v20 -> v21;
  v21 -> v22;
  v22 -> v24;
  v24 -> v25;
  v25 -> v26;
  v26 -> v27;
  v27 -> v28;
  v28 -> v29  [label="False"];
  v28 -> v30  [label="True"];
  v30 -> v28;
  v29 -> v23;
  v23 -> v32  [label="Throws"];
  v32 -> v33;
  v33 -> v34  [label="True"];
  v34 -> v35;
  v33 -> v37  [label="False"];
  v37 -> v23  [label="Throws"];
  v36 -> v31;
  v31 -> v23;
  v38 -> v39;
  v39 -> v40;
  v40 -> v41;
  v41 -> v42;
  v42 -> v44;
  v44 -> v45  [label="True"];
  v45 -> v46;
  v46 -> v43;
  v44 -> v47  [label="False"];
  v47 -> v48  [label="True"];
  v48 -> v49;
  v49 -> v43;
  v47 -> v50  [label="False"];
  v50 -> v51  [label="False"];
  v50 -> v52  [label="True"];
  v51 -> v52  [label="True"];
  v52 -> v53;
  v53 -> v43;
  v51 -> v54  [label="False"];
  v54 -> v55;
  v55 -> v56;
  v56 -> v43;
  v43 -> v57;
  // end-of-graph
}
