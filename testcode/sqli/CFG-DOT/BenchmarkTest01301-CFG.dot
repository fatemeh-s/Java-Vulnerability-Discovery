digraph BenchmarkTest01301_CFG {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  String param = request.getParameter('vector')"];
  v6  [label="44:  if (param == null)"];
  v7  [label="44:  param = ''"];
  v8  [label="endif"];
  v9  [label="46:  String bar = new Test().doSomething(param)"];
  v10  [label="48:  String sql = '{call ' + bar + '}'"];
  v11  [label="50:  try"];
  v12  [label="end-try"];
  v13  [label="51:  java.sql.Connection connection = org.owasp.benchmark.helpers.DatabaseHelper.getSqlConnection()"];
  v14  [label="52:  java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY, 
							java.sql.ResultSet.CONCUR_READ_ONLY )"];
  v15  [label="54:  java.sql.ResultSet rs = statement.executeQuery()"];
  v16  [label="55:  org.owasp.benchmark.helpers.DatabaseHelper.printResults(rs, sql, response)"];
  v17  [label="end-catch"];
  v18  [label="56:  catch (java.sql.SQLException e)"];
  v19  [label="57:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v20  [label="58:  response.getWriter().println('Error processing request.')"];
  v21  [label="59:  return;"];
  v22  [label="endif"];
  v23  [label="61:  throw new ServletException(e)"];
  v24  [label="67:  String doSomething(String param)"];
  v25  [label="70:  String a35178 = param"];
  v26  [label="71:  StringBuilder b35178 = new StringBuilder(a35178)"];
  v27  [label="72:  b35178.append(' SafeStuff')"];
  v28  [label="73:  b35178.replace(b35178.length()-'Chars'.length(),b35178.length(),'Chars')"];
  v29  [label="74:  java.util.HashMap<String,Object> map35178 = new java.util.HashMap<String,Object>()"];
  v30  [label="75:  map35178.put('key35178', b35178.toString())"];
  v31  [label="76:  String c35178 = (String)map35178.get('key35178')"];
  v32  [label="77:  String d35178 = c35178.substring(0,c35178.length()-1)"];
  v33  [label="78:  String e35178 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d35178.getBytes() ) ))"];
  v34  [label="80:  String f35178 = e35178.split(' ')[0]"];
  v35  [label="81:  org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"];
  v36  [label="82:  String g35178 = 'barbarians_at_the_gate'"];
  v37  [label="83:  String bar = thing.doSomething(g35178)"];
  v38  [label="85:  return bar;"];
  // graph-edges
  v1 -> v2;
  v3 -> v4;
  v4 -> v5;
  v5 -> v6;
  v6 -> v7  [label="True"];
  v7 -> v8;
  v6 -> v8  [label="False"];
  v8 -> v9;
  v9 -> v10;
  v10 -> v11;
  v11 -> v13;
  v13 -> v14;
  v14 -> v15;
  v15 -> v16;
  v16 -> v12;
  v12 -> v18  [label="Throws"];
  v18 -> v19;
  v19 -> v20  [label="True"];
  v20 -> v21;
  v19 -> v23  [label="False"];
  v23 -> v12  [label="Throws"];
  v22 -> v17;
  v17 -> v12;
  v24 -> v25;
  v25 -> v26;
  v26 -> v27;
  v27 -> v28;
  v28 -> v29;
  v29 -> v30;
  v30 -> v31;
  v31 -> v32;
  v32 -> v33;
  v33 -> v34;
  v34 -> v35;
  v35 -> v36;
  v36 -> v37;
  v37 -> v38;
  // end-of-graph
}
