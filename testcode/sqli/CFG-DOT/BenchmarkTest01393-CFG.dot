digraph BenchmarkTest01393_CFG {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  java.util.Map<String,String[]> map = request.getParameterMap()"];
  v6  [label="44:  String param = ''"];
  v7  [label="45:  if (!map.isEmpty())"];
  v8  [label="46:  String[] values = map.get('vector')"];
  v9  [label="47:  if (values != null)"];
  v10  [label="47:  param = values[0]"];
  v11  [label="endif"];
  v12  [label="endif"];
  v13  [label="51:  String bar = new Test().doSomething(param)"];
  v14  [label="53:  String sql = 'INSERT INTO users (username, password) VALUES ('foo',''+ bar + '')'"];
  v15  [label="55:  try"];
  v16  [label="end-try"];
  v17  [label="56:  java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement()"];
  v18  [label="57:  int count = statement.executeUpdate( sql, new int[] {1,2} )"];
  v19  [label="58:  org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response)"];
  v20  [label="end-catch"];
  v21  [label="59:  catch (java.sql.SQLException e)"];
  v22  [label="60:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v23  [label="61:  response.getWriter().println('Error processing request.')"];
  v24  [label="62:  return;"];
  v25  [label="endif"];
  v26  [label="64:  throw new ServletException(e)"];
  v27  [label="70:  String doSomething(String param)"];
  v28  [label="73:  String a44572 = param"];
  v29  [label="74:  StringBuilder b44572 = new StringBuilder(a44572)"];
  v30  [label="75:  b44572.append(' SafeStuff')"];
  v31  [label="76:  b44572.replace(b44572.length()-'Chars'.length(),b44572.length(),'Chars')"];
  v32  [label="77:  java.util.HashMap<String,Object> map44572 = new java.util.HashMap<String,Object>()"];
  v33  [label="78:  map44572.put('key44572', b44572.toString())"];
  v34  [label="79:  String c44572 = (String)map44572.get('key44572')"];
  v35  [label="80:  String d44572 = c44572.substring(0,c44572.length()-1)"];
  v36  [label="81:  String e44572 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d44572.getBytes() ) ))"];
  v37  [label="83:  String f44572 = e44572.split(' ')[0]"];
  v38  [label="84:  org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"];
  v39  [label="85:  String g44572 = 'barbarians_at_the_gate'"];
  v40  [label="86:  String bar = thing.doSomething(g44572)"];
  v41  [label="88:  return bar;"];
  // graph-edges
  v1 -> v2;
  v3 -> v4;
  v4 -> v5;
  v5 -> v6;
  v6 -> v7;
  v7 -> v8  [label="True"];
  v8 -> v9;
  v9 -> v10  [label="True"];
  v10 -> v11;
  v9 -> v11  [label="False"];
  v11 -> v12;
  v7 -> v12  [label="False"];
  v12 -> v13;
  v13 -> v14;
  v14 -> v15;
  v15 -> v17;
  v17 -> v18;
  v18 -> v19;
  v19 -> v16;
  v16 -> v21  [label="Throws"];
  v21 -> v22;
  v22 -> v23  [label="True"];
  v23 -> v24;
  v22 -> v26  [label="False"];
  v26 -> v16  [label="Throws"];
  v25 -> v20;
  v20 -> v16;
  v27 -> v28;
  v28 -> v29;
  v29 -> v30;
  v30 -> v31;
  v31 -> v32;
  v32 -> v33;
  v33 -> v34;
  v34 -> v35;
  v35 -> v36;
  v36 -> v37;
  v37 -> v38;
  v38 -> v39;
  v39 -> v40;
  v40 -> v41;
  // end-of-graph
}
