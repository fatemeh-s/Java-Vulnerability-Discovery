digraph BenchmarkTest02452_CFG {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  org.owasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request )"];
  v6  [label="44:  String param = scr.getTheParameter('vector')"];
  v7  [label="45:  if (param == null)"];
  v8  [label="45:  param = ''"];
  v9  [label="endif"];
  v10  [label="47:  String bar = doSomething(param)"];
  v11  [label="49:  try"];
  v12  [label="end-try"];
  v13  [label="50:  String sql = 'SELECT * from USERS where USERNAME='foo' and PASSWORD=''
	            + bar + '''"];
  v14  [label="53:  java.util.List list = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForList(sql)"];
  v15  [label="54:  java.io.PrintWriter out = response.getWriter()"];
  v16  [label="55:  out.write('Your results are: <br>')"];
  v17  [label="58:  for (Object o:list)"];
  v18  [label="endfor"];
  v19  [label="59:  out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(o.toString()) + '<br>')"];
  v20  [label="end-catch"];
  v21  [label="62:  catch (org.springframework.dao.DataAccessException e)"];
  v22  [label="63:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v23  [label="64:  response.getWriter().println('Error processing request.')"];
  v24  [label="65:  return;"];
  v25  [label="endif"];
  v26  [label="67:  throw new ServletException(e)"];
  v27  [label="71:  String doSomething(String param)"];
  v28  [label="74:  String a28821 = param"];
  v29  [label="75:  StringBuilder b28821 = new StringBuilder(a28821)"];
  v30  [label="76:  b28821.append(' SafeStuff')"];
  v31  [label="77:  b28821.replace(b28821.length()-'Chars'.length(),b28821.length(),'Chars')"];
  v32  [label="78:  java.util.HashMap<String,Object> map28821 = new java.util.HashMap<String,Object>()"];
  v33  [label="79:  map28821.put('key28821', b28821.toString())"];
  v34  [label="80:  String c28821 = (String)map28821.get('key28821')"];
  v35  [label="81:  String d28821 = c28821.substring(0,c28821.length()-1)"];
  v36  [label="82:  String e28821 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d28821.getBytes() ) ))"];
  v37  [label="84:  String f28821 = e28821.split(' ')[0]"];
  v38  [label="85:  org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"];
  v39  [label="86:  String g28821 = 'barbarians_at_the_gate'"];
  v40  [label="87:  String bar = thing.doSomething(g28821)"];
  v41  [label="89:  return bar;"];
  // graph-edges
  v1 -> v2;
  v3 -> v4;
  v4 -> v5;
  v5 -> v6;
  v6 -> v7;
  v7 -> v8  [label="True"];
  v8 -> v9;
  v7 -> v9  [label="False"];
  v9 -> v10;
  v10 -> v11;
  v11 -> v13;
  v13 -> v14;
  v14 -> v15;
  v15 -> v16;
  v16 -> v17;
  v17 -> v18  [label="False"];
  v17 -> v19  [label="True"];
  v19 -> v17;
  v18 -> v12;
  v12 -> v21  [label="Throws"];
  v21 -> v22;
  v22 -> v23  [label="True"];
  v23 -> v24;
  v22 -> v26  [label="False"];
  v26 -> v12  [label="Throws"];
  v25 -> v20;
  v20 -> v12;
  v27 -> v28;
  v28 -> v29;
  v29 -> v30;
  v30 -> v31;
  v31 -> v32;
  v32 -> v33;
  v33 -> v34;
  v34 -> v35;
  v35 -> v36;
  v36 -> v37;
  v37 -> v38;
  v38 -> v39;
  v39 -> v40;
  v40 -> v41;
  // end-of-graph
}
