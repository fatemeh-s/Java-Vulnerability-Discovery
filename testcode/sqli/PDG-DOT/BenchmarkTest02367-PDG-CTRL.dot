digraph BenchmarkTest02367_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  String param = ''"];
  v7  [label="44:  boolean flag = true"];
  v8  [label="45:  java.util.Enumeration<String> names = request.getParameterNames()"];
  v9  [label="46:  while (names.hasMoreElements() && flag)"];
  v10  [label="LOOP"];
  v11  [label="47:  String name = (String) names.nextElement()"];
  v12  [label="48:  String[] values = request.getParameterValues(name)"];
  v13  [label="49:  if (values != null)"];
  v14  [label="THEN"];
  v15  [label="50:  int i=0"];
  v16  [label="50:  for (i<values.length && flag)"];
  v17  [label="LOOP"];
  v18  [label="51:  String value = values[i]"];
  v19  [label="52:  if (value.equals('vector'))"];
  v20  [label="THEN"];
  v21  [label="53:  param = name"];
  v22  [label="54:  flag = false"];
  v23  [label="50:  i++"];
  v24  [label="60:  String bar = doSomething(param)"];
  v25  [label="62:  String sql = 'SELECT * from USERS where USERNAME='foo' and PASSWORD=''+ bar +'''"];
  v26  [label="64:  try"];
  v27  [label="65:  java.sql.Statement statement =  org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement()"];
  v28  [label="66:  statement.execute( sql, new int[] { 1, 2 } )"];
  v29  [label="67:  org.owasp.benchmark.helpers.DatabaseHelper.printResults(statement, sql, response)"];
  v30  [label="68:  catch (java.sql.SQLException e)"];
  v31  [label="69:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v32  [label="THEN"];
  v33  [label="70:  response.getWriter().println('Error processing request.')"];
  v34  [label="71:  return;"];
  v35  [label="ELSE"];
  v36  [label="73:  throw new ServletException(e);"];
  v37  [label="exit"];
  v38  [label="77:  String doSomething(String param)"];
  v39  [label="80:  String a58799 = param"];
  v40  [label="81:  StringBuilder b58799 = new StringBuilder(a58799)"];
  v41  [label="82:  b58799.append(' SafeStuff')"];
  v42  [label="83:  b58799.replace(b58799.length()-'Chars'.length(),b58799.length(),'Chars')"];
  v43  [label="84:  java.util.HashMap<String,Object> map58799 = new java.util.HashMap<String,Object>()"];
  v44  [label="85:  map58799.put('key58799', b58799.toString())"];
  v45  [label="86:  String c58799 = (String)map58799.get('key58799')"];
  v46  [label="87:  String d58799 = c58799.substring(0,c58799.length()-1)"];
  v47  [label="88:  String e58799 = new String( new sun.misc.BASE64Decoder().decodeBuffer( 
		    new sun.misc.BASE64Encoder().encode( d58799.getBytes() ) ))"];
  v48  [label="90:  String f58799 = e58799.split(' ')[0]"];
  v49  [label="91:  org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing()"];
  v50  [label="92:  String g58799 = 'barbarians_at_the_gate'"];
  v51  [label="93:  String bar = thing.doSomething(g58799)"];
  v52  [label="95:  return bar;"];
  v53  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v4 -> v9;
  v9 -> v10  [label="True"];
  v10 -> v11;
  v10 -> v12;
  v10 -> v13;
  v13 -> v14  [label="True"];
  v14 -> v15;
  v14 -> v16;
  v16 -> v17  [label="True"];
  v17 -> v18;
  v17 -> v19;
  v19 -> v20  [label="True"];
  v20 -> v21;
  v20 -> v22;
  v17 -> v23;
  v4 -> v24;
  v4 -> v25;
  v4 -> v26;
  v26 -> v27;
  v26 -> v28;
  v26 -> v29;
  v26 -> v30  [label="Throws"];
  v30 -> v31;
  v31 -> v32  [label="True"];
  v32 -> v33;
  v32 -> v34;
  v31 -> v35  [label="False"];
  v35 -> v36;
  v4 -> v37;
  v38 -> v39;
  v38 -> v40;
  v38 -> v41;
  v38 -> v42;
  v38 -> v43;
  v38 -> v44;
  v38 -> v45;
  v38 -> v46;
  v38 -> v47;
  v38 -> v48;
  v38 -> v49;
  v38 -> v50;
  v38 -> v51;
  v38 -> v52;
  v38 -> v53;
  // end-of-graph
}
