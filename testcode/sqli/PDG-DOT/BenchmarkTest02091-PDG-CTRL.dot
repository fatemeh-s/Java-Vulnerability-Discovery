digraph BenchmarkTest02091_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  String param = ''"];
  v7  [label="44:  java.util.Enumeration<String> headers = request.getHeaders('vector')"];
  v8  [label="45:  if (headers.hasMoreElements())"];
  v9  [label="THEN"];
  v10  [label="46:  param = headers.nextElement()"];
  v11  [label="48:  param = java.net.URLDecoder.decode(param, 'UTF-8')"];
  v12  [label="51:  String bar = doSomething(param)"];
  v13  [label="53:  try"];
  v14  [label="54:  String sql = 'SELECT * from USERS where USERNAME='foo' and PASSWORD='' + bar + '''"];
  v15  [label="56:  java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {
	            public String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {
	                try {
	                	return rs.getString('USERNAME');
	                } catch (java.sql.SQLException e) {
	                	if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {
	        				return 'Error processing query.';
	        			}
						else throw e;
					}
	            }
	        })"];
  v16  [label="68:  java.io.PrintWriter out = response.getWriter()"];
  v17  [label="70:  out.write('Your results are: ')"];
  v18  [label="72:  for (String s : results)"];
  v19  [label="LOOP"];
  v20  [label="73:  out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(s) + '<br>')"];
  v21  [label="76:  catch (org.springframework.dao.DataAccessException e)"];
  v22  [label="77:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v23  [label="THEN"];
  v24  [label="78:  response.getWriter().println('Error processing request.')"];
  v25  [label="79:  return;"];
  v26  [label="ELSE"];
  v27  [label="81:  throw new ServletException(e);"];
  v28  [label="exit"];
  v29  [label="85:  String doSomething(String param)"];
  v30  [label="87:  String bar = param"];
  v31  [label="89:  return bar;"];
  v32  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v8 -> v9  [label="True"];
  v9 -> v10;
  v4 -> v11;
  v4 -> v12;
  v4 -> v13;
  v13 -> v14;
  v13 -> v15;
  v13 -> v16;
  v13 -> v17;
  v13 -> v18;
  v18 -> v19  [label="True"];
  v19 -> v20;
  v13 -> v21  [label="Throws"];
  v21 -> v22;
  v22 -> v23  [label="True"];
  v23 -> v24;
  v23 -> v25;
  v22 -> v26  [label="False"];
  v26 -> v27;
  v4 -> v28;
  v29 -> v30;
  v29 -> v31;
  v29 -> v32;
  // end-of-graph
}
