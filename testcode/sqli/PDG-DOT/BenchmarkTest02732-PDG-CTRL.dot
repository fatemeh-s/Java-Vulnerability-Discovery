digraph BenchmarkTest02732_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  org.owasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request )"];
  v7  [label="44:  String param = scr.getTheValue('vector')"];
  v8  [label="46:  String bar = doSomething(param)"];
  v9  [label="48:  try"];
  v10  [label="49:  String sql = 'SELECT * from USERS where USERNAME='foo' and PASSWORD='' + bar + '''"];
  v11  [label="51:  java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {
	            public String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {
	                try {
	                	return rs.getString('USERNAME');
	                } catch (java.sql.SQLException e) {
	                	if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {
	        				return 'Error processing query.';
	        			}
						else throw e;
					}
	            }
	        })"];
  v12  [label="63:  java.io.PrintWriter out = response.getWriter()"];
  v13  [label="65:  out.write('Your results are: ')"];
  v14  [label="67:  for (String s : results)"];
  v15  [label="LOOP"];
  v16  [label="68:  out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(s) + '<br>')"];
  v17  [label="71:  catch (org.springframework.dao.DataAccessException e)"];
  v18  [label="72:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v19  [label="THEN"];
  v20  [label="73:  response.getWriter().println('Error processing request.')"];
  v21  [label="74:  return;"];
  v22  [label="ELSE"];
  v23  [label="76:  throw new ServletException(e);"];
  v24  [label="exit"];
  v25  [label="80:  String doSomething(String param)"];
  v26  [label="82:  String bar = param"];
  v27  [label="84:  return bar;"];
  v28  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v4 -> v9;
  v9 -> v10;
  v9 -> v11;
  v9 -> v12;
  v9 -> v13;
  v9 -> v14;
  v14 -> v15  [label="True"];
  v15 -> v16;
  v9 -> v17  [label="Throws"];
  v17 -> v18;
  v18 -> v19  [label="True"];
  v19 -> v20;
  v19 -> v21;
  v18 -> v22  [label="False"];
  v22 -> v23;
  v4 -> v24;
  v25 -> v26;
  v25 -> v27;
  v25 -> v28;
  // end-of-graph
}
