digraph BenchmarkTest00052_PDG_DATA {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="42:  response.setContentType('text/html')"];
  v5  [label="45:  org.owasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request )"];
  v6  [label="46:  String param = scr.getTheValue('vector')"];
  v7  [label="49:  String sql = '{call ' + param + '}'"];
  v8  [label="51:  try"];
  v9  [label="end-try"];
  v10  [label="52:  java.sql.Connection connection = org.owasp.benchmark.helpers.DatabaseHelper.getSqlConnection()"];
  v11  [label="53:  java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY, 
							java.sql.ResultSet.CONCUR_READ_ONLY, java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT )"];
  v12  [label="55:  java.sql.ResultSet rs = statement.executeQuery()"];
  v13  [label="56:  org.owasp.benchmark.helpers.DatabaseHelper.printResults(rs, sql, response)"];
  v14  [label="end-catch"];
  v15  [label="57:  catch (java.sql.SQLException e)"];
  v16  [label="58:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v17  [label="59:  response.getWriter().println('Error processing request.')"];
  v18  [label="60:  return;"];
  v19  [label="endif"];
  v20  [label="62:  throw new ServletException(e)"];
  // graph-edges
  v1 -> v2  [arrowhead=empty, color=gray, style=dashed, label=""];
  v3 -> v4  [arrowhead=empty, color=gray, style=dashed, label=""];
  v4 -> v5  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v6  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v7  [arrowhead=empty, color=gray, style=dashed, label=""];
  v7 -> v8  [arrowhead=empty, color=gray, style=dashed, label=""];
  v8 -> v10  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v11  [arrowhead=empty, color=gray, style=dashed, label=""];
  v11 -> v12  [arrowhead=empty, color=gray, style=dashed, label=""];
  v12 -> v13  [arrowhead=empty, color=gray, style=dashed, label=""];
  v13 -> v9  [arrowhead=empty, color=gray, style=dashed, label=""];
  v9 -> v15  [arrowhead=empty, color=gray, style=dashed, label="Throws"];
  v15 -> v16  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v17  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v17 -> v18  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v20  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v20 -> v9  [arrowhead=empty, color=gray, style=dashed, label="Throws"];
  v19 -> v14  [arrowhead=empty, color=gray, style=dashed, label=""];
  v14 -> v9  [arrowhead=empty, color=gray, style=dashed, label=""];
   v1 -> v2   [style=bold, label=" (request)"];
   v1 -> v2   [style=bold, label=" (response)"];
   v3 -> v5   [style=bold, label=" (request)"];
   v3 -> v4   [style=bold, label=" (response)"];
   v3 -> v13   [style=bold, label=" (response)"];
   v3 -> v17   [style=bold, label=" (response)"];
   v5 -> v6   [style=bold, label=" (scr)"];
   v6 -> v7   [style=bold, label=" (param)"];
   v7 -> v11   [style=bold, label=" (sql)"];
   v7 -> v13   [style=bold, label=" (sql)"];
   v10 -> v11   [style=bold, label=" (connection)"];
   v11 -> v12   [style=bold, label=" (statement)"];
   v12 -> v13   [style=bold, label=" (rs)"];
   v15 -> v20   [style=bold, label=" (e)"];
  // end-of-graph
}
