digraph BenchmarkTest00033_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="42:  response.setContentType('text/html')"];
  v6  [label="45:  java.util.Map<String,String[]> map = request.getParameterMap()"];
  v7  [label="46:  String param = ''"];
  v8  [label="47:  if (!map.isEmpty())"];
  v9  [label="THEN"];
  v10  [label="48:  String[] values = map.get('vector')"];
  v11  [label="49:  if (values != null)"];
  v12  [label="THEN"];
  v13  [label="49:  param = values[0]"];
  v14  [label="54:  try"];
  v15  [label="55:  String sql = 'SELECT  * from USERS where USERNAME='foo' and PASSWORD=''+ param + '''"];
  v16  [label="57:  org.springframework.jdbc.support.rowset.SqlRowSet results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForRowSet(sql)"];
  v17  [label="58:  java.io.PrintWriter out = response.getWriter()"];
  v18  [label="59:  out.write('Your results are: ')"];
  v19  [label="61:  while (results.next())"];
  v20  [label="LOOP"];
  v21  [label="62:  out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(results.getString('USERNAME')) + ' ')"];
  v22  [label="65:  catch (org.springframework.dao.DataAccessException e)"];
  v23  [label="66:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v24  [label="THEN"];
  v25  [label="67:  response.getWriter().println('Error processing request.')"];
  v26  [label="68:  return;"];
  v27  [label="ELSE"];
  v28  [label="70:  throw new ServletException(e);"];
  v29  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v8 -> v9  [label="True"];
  v9 -> v10;
  v9 -> v11;
  v11 -> v12  [label="True"];
  v12 -> v13;
  v4 -> v14;
  v14 -> v15;
  v14 -> v16;
  v14 -> v17;
  v14 -> v18;
  v14 -> v19;
  v19 -> v20  [label="True"];
  v20 -> v21;
  v14 -> v22  [label="Throws"];
  v22 -> v23;
  v23 -> v24  [label="True"];
  v24 -> v25;
  v24 -> v26;
  v23 -> v27  [label="False"];
  v27 -> v28;
  v4 -> v29;
  // end-of-graph
}
