digraph BenchmarkTest02177_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  String param = request.getParameter('vector')"];
  v7  [label="44:  if (param == null)"];
  v8  [label="THEN"];
  v9  [label="44:  param = ''"];
  v10  [label="46:  String bar = doSomething(param)"];
  v11  [label="48:  try"];
  v12  [label="49:  String sql = 'SELECT * from USERS where USERNAME='foo' and PASSWORD='' + bar + '''"];
  v13  [label="51:  java.util.List<String> results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.query(sql,  new org.springframework.jdbc.core.RowMapper<String>() {
	            public String mapRow(java.sql.ResultSet rs, int rowNum) throws java.sql.SQLException {
	                try {
	                	return rs.getString('USERNAME');
	                } catch (java.sql.SQLException e) {
	                	if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors) {
	        				return 'Error processing query.';
	        			}
						else throw e;
					}
	            }
	        })"];
  v14  [label="63:  java.io.PrintWriter out = response.getWriter()"];
  v15  [label="65:  out.write('Your results are: ')"];
  v16  [label="67:  for (String s : results)"];
  v17  [label="LOOP"];
  v18  [label="68:  out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(s) + '<br>')"];
  v19  [label="71:  catch (org.springframework.dao.DataAccessException e)"];
  v20  [label="72:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v21  [label="THEN"];
  v22  [label="73:  response.getWriter().println('Error processing request.')"];
  v23  [label="74:  return;"];
  v24  [label="ELSE"];
  v25  [label="76:  throw new ServletException(e);"];
  v26  [label="exit"];
  v27  [label="80:  String doSomething(String param)"];
  v28  [label="82:  String bar"];
  v29  [label="83:  String guess = 'ABC'"];
  v30  [label="84:  char switchTarget = guess.charAt(2)"];
  v31  [label="87:  switch (switchTarget)"];
  v32  [label="88:  case 'A':"];
  v33  [label="THEN"];
  v34  [label="ELSE"];
  v35  [label="89:  bar = param"];
  v36  [label="90:  break;"];
  v37  [label="FOLLOW-1"];
  v38  [label="91:  case 'B':"];
  v39  [label="THEN"];
  v40  [label="ELSE"];
  v41  [label="92:  bar = 'bobs_your_uncle'"];
  v42  [label="93:  break;"];
  v43  [label="FOLLOW-2"];
  v44  [label="94:  case 'C':"];
  v45  [label="THEN"];
  v46  [label="95:  case 'D':"];
  v47  [label="ELSE"];
  v48  [label="96:  bar = param"];
  v49  [label="97:  break;"];
  v50  [label="FOLLOW-3"];
  v51  [label="98:  default:"];
  v52  [label="99:  bar = 'bobs_your_uncle'"];
  v53  [label="100:  break;"];
  v54  [label="103:  return bar;"];
  v55  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v7 -> v8  [label="True"];
  v8 -> v9;
  v4 -> v10;
  v4 -> v11;
  v11 -> v12;
  v11 -> v13;
  v11 -> v14;
  v11 -> v15;
  v11 -> v16;
  v16 -> v17  [label="True"];
  v17 -> v18;
  v11 -> v19  [label="Throws"];
  v19 -> v20;
  v20 -> v21  [label="True"];
  v21 -> v22;
  v21 -> v23;
  v20 -> v24  [label="False"];
  v24 -> v25;
  v4 -> v26;
  v27 -> v28;
  v27 -> v29;
  v27 -> v30;
  v27 -> v31;
  v31 -> v32;
  v32 -> v33  [label="True"];
  v33 -> v35;
  v33 -> v36;
  v32 -> v34  [label="False"];
  v34 -> v37;
  v37 -> v38;
  v38 -> v39  [label="True"];
  v39 -> v41;
  v39 -> v42;
  v38 -> v40  [label="False"];
  v40 -> v43;
  v43 -> v44;
  v44 -> v45  [label="True"];
  v44 -> v46  [label="False"];
  v46 -> v45  [label="True"];
  v45 -> v48;
  v45 -> v49;
  v46 -> v47  [label="False"];
  v47 -> v50;
  v50 -> v51;
  v50 -> v52;
  v50 -> v53;
  v27 -> v54;
  v27 -> v55;
  // end-of-graph
}
