digraph BenchmarkTest02728_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  org.owasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request )"];
  v7  [label="44:  String param = scr.getTheValue('vector')"];
  v8  [label="46:  String bar = doSomething(param)"];
  v9  [label="48:  String sql = 'SELECT * from USERS where USERNAME=? and PASSWORD=''+ bar +'''"];
  v10  [label="50:  try"];
  v11  [label="51:  java.sql.Connection connection = org.owasp.benchmark.helpers.DatabaseHelper.getSqlConnection()"];
  v12  [label="52:  java.sql.PreparedStatement statement = connection.prepareStatement( sql,
				java.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY, 
				java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT )"];
  v13  [label="55:  statement.setString(1, 'foo')"];
  v14  [label="56:  statement.execute()"];
  v15  [label="57:  org.owasp.benchmark.helpers.DatabaseHelper.printResults(statement, sql, response)"];
  v16  [label="58:  catch (java.sql.SQLException e)"];
  v17  [label="59:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v18  [label="THEN"];
  v19  [label="60:  response.getWriter().println('Error processing request.')"];
  v20  [label="61:  return;"];
  v21  [label="ELSE"];
  v22  [label="63:  throw new ServletException(e);"];
  v23  [label="exit"];
  v24  [label="67:  String doSomething(String param)"];
  v25  [label="69:  String bar = 'safe!'"];
  v26  [label="70:  java.util.HashMap<String,Object> map87292 = new java.util.HashMap<String,Object>()"];
  v27  [label="71:  map87292.put('keyA-87292', 'a Value')"];
  v28  [label="72:  map87292.put('keyB-87292', param)"];
  v29  [label="73:  map87292.put('keyC', 'another Value')"];
  v30  [label="74:  bar = (String)map87292.get('keyB-87292')"];
  v31  [label="76:  return bar;"];
  v32  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v4 -> v9;
  v4 -> v10;
  v10 -> v11;
  v10 -> v12;
  v10 -> v13;
  v10 -> v14;
  v10 -> v15;
  v10 -> v16  [label="Throws"];
  v16 -> v17;
  v17 -> v18  [label="True"];
  v18 -> v19;
  v18 -> v20;
  v17 -> v21  [label="False"];
  v21 -> v22;
  v4 -> v23;
  v24 -> v25;
  v24 -> v26;
  v24 -> v27;
  v24 -> v28;
  v24 -> v29;
  v24 -> v30;
  v24 -> v31;
  v24 -> v32;
  // end-of-graph
}
