digraph BenchmarkTest00205_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  String param = request.getHeader('vector')"];
  v7  [label="44:  if (param == null)"];
  v8  [label="THEN"];
  v9  [label="44:  param = ''"];
  v10  [label="45:  param = java.net.URLDecoder.decode(param, 'UTF-8')"];
  v11  [label="47:  if (param == null)"];
  v12  [label="THEN"];
  v13  [label="47:  param = ''"];
  v14  [label="50:  String bar = 'alsosafe'"];
  v15  [label="51:  if (param != null)"];
  v16  [label="THEN"];
  v17  [label="52:  java.util.List<String> valuesList = new java.util.ArrayList<String>( )"];
  v18  [label="53:  valuesList.add('safe')"];
  v19  [label="54:  valuesList.add( param )"];
  v20  [label="55:  valuesList.add( 'moresafe' )"];
  v21  [label="57:  valuesList.remove(0)"];
  v22  [label="59:  bar = valuesList.get(1)"];
  v23  [label="63:  String sql = 'INSERT INTO users (username, password) VALUES ('foo',''+ bar + '')'"];
  v24  [label="65:  try"];
  v25  [label="66:  java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement()"];
  v26  [label="67:  int count = statement.executeUpdate( sql, new String[] {'USERNAME','PASSWORD'} )"];
  v27  [label="68:  org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response)"];
  v28  [label="69:  catch (java.sql.SQLException e)"];
  v29  [label="70:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v30  [label="THEN"];
  v31  [label="71:  response.getWriter().println('Error processing request.')"];
  v32  [label="72:  return;"];
  v33  [label="ELSE"];
  v34  [label="74:  throw new ServletException(e);"];
  v35  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v7 -> v8  [label="True"];
  v8 -> v9;
  v4 -> v10;
  v4 -> v11;
  v11 -> v12  [label="True"];
  v12 -> v13;
  v4 -> v14;
  v4 -> v15;
  v15 -> v16  [label="True"];
  v16 -> v17;
  v16 -> v18;
  v16 -> v19;
  v16 -> v20;
  v16 -> v21;
  v16 -> v22;
  v4 -> v23;
  v4 -> v24;
  v24 -> v25;
  v24 -> v26;
  v24 -> v27;
  v24 -> v28  [label="Throws"];
  v28 -> v29;
  v29 -> v30  [label="True"];
  v30 -> v31;
  v30 -> v32;
  v29 -> v33  [label="False"];
  v33 -> v34;
  v4 -> v35;
  // end-of-graph
}
