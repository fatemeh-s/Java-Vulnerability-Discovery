digraph BenchmarkTest00509_PDG_DATA {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  java.util.Map<String,String[]> map = request.getParameterMap()"];
  v6  [label="44:  String param = ''"];
  v7  [label="45:  if (!map.isEmpty())"];
  v8  [label="46:  String[] values = map.get('vector')"];
  v9  [label="47:  if (values != null)"];
  v10  [label="47:  param = values[0]"];
  v11  [label="endif"];
  v12  [label="endif"];
  v13  [label="52:  String bar = 'safe!'"];
  v14  [label="53:  java.util.HashMap<String,Object> map54863 = new java.util.HashMap<String,Object>()"];
  v15  [label="54:  map54863.put('keyA-54863', 'a_Value')"];
  v16  [label="55:  map54863.put('keyB-54863', param)"];
  v17  [label="56:  map54863.put('keyC', 'another_Value')"];
  v18  [label="57:  bar = (String)map54863.get('keyB-54863')"];
  v19  [label="58:  bar = (String)map54863.get('keyA-54863')"];
  v20  [label="61:  String sql = '{call ' + bar + '}'"];
  v21  [label="63:  try"];
  v22  [label="end-try"];
  v23  [label="64:  java.sql.Connection connection = org.owasp.benchmark.helpers.DatabaseHelper.getSqlConnection()"];
  v24  [label="65:  java.sql.CallableStatement statement = connection.prepareCall( sql, java.sql.ResultSet.TYPE_FORWARD_ONLY, 
							java.sql.ResultSet.CONCUR_READ_ONLY )"];
  v25  [label="67:  java.sql.ResultSet rs = statement.executeQuery()"];
  v26  [label="68:  org.owasp.benchmark.helpers.DatabaseHelper.printResults(rs, sql, response)"];
  v27  [label="end-catch"];
  v28  [label="69:  catch (java.sql.SQLException e)"];
  v29  [label="70:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v30  [label="71:  response.getWriter().println('Error processing request.')"];
  v31  [label="72:  return;"];
  v32  [label="endif"];
  v33  [label="74:  throw new ServletException(e)"];
  // graph-edges
  v1 -> v2  [arrowhead=empty, color=gray, style=dashed, label=""];
  v3 -> v4  [arrowhead=empty, color=gray, style=dashed, label=""];
  v4 -> v5  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v6  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v7  [arrowhead=empty, color=gray, style=dashed, label=""];
  v7 -> v8  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v8 -> v9  [arrowhead=empty, color=gray, style=dashed, label=""];
  v9 -> v10  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v10 -> v11  [arrowhead=empty, color=gray, style=dashed, label=""];
  v9 -> v11  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v11 -> v12  [arrowhead=empty, color=gray, style=dashed, label=""];
  v7 -> v12  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v12 -> v13  [arrowhead=empty, color=gray, style=dashed, label=""];
  v13 -> v14  [arrowhead=empty, color=gray, style=dashed, label=""];
  v14 -> v15  [arrowhead=empty, color=gray, style=dashed, label=""];
  v15 -> v16  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v17  [arrowhead=empty, color=gray, style=dashed, label=""];
  v17 -> v18  [arrowhead=empty, color=gray, style=dashed, label=""];
  v18 -> v19  [arrowhead=empty, color=gray, style=dashed, label=""];
  v19 -> v20  [arrowhead=empty, color=gray, style=dashed, label=""];
  v20 -> v21  [arrowhead=empty, color=gray, style=dashed, label=""];
  v21 -> v23  [arrowhead=empty, color=gray, style=dashed, label=""];
  v23 -> v24  [arrowhead=empty, color=gray, style=dashed, label=""];
  v24 -> v25  [arrowhead=empty, color=gray, style=dashed, label=""];
  v25 -> v26  [arrowhead=empty, color=gray, style=dashed, label=""];
  v26 -> v22  [arrowhead=empty, color=gray, style=dashed, label=""];
  v22 -> v28  [arrowhead=empty, color=gray, style=dashed, label="Throws"];
  v28 -> v29  [arrowhead=empty, color=gray, style=dashed, label=""];
  v29 -> v30  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v30 -> v31  [arrowhead=empty, color=gray, style=dashed, label=""];
  v29 -> v33  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v33 -> v22  [arrowhead=empty, color=gray, style=dashed, label="Throws"];
  v32 -> v27  [arrowhead=empty, color=gray, style=dashed, label=""];
  v27 -> v22  [arrowhead=empty, color=gray, style=dashed, label=""];
   v1 -> v2   [style=bold, label=" (request)"];
   v1 -> v2   [style=bold, label=" (response)"];
   v3 -> v5   [style=bold, label=" (request)"];
   v3 -> v4   [style=bold, label=" (response)"];
   v3 -> v26   [style=bold, label=" (response)"];
   v3 -> v30   [style=bold, label=" (response)"];
   v5 -> v7   [style=bold, label=" (map)"];
   v5 -> v8   [style=bold, label=" (map)"];
   v6 -> v16   [style=bold, label=" (param)"];
   v14 -> v15   [style=bold, label=" (map54863)"];
   v14 -> v16   [style=bold, label=" (map54863)"];
   v14 -> v17   [style=bold, label=" (map54863)"];
   v14 -> v18   [style=bold, label=" (map54863)"];
   v14 -> v19   [style=bold, label=" (map54863)"];
   v19 -> v20   [style=bold, label=" (bar)"];
   v20 -> v24   [style=bold, label=" (sql)"];
   v20 -> v26   [style=bold, label=" (sql)"];
   v23 -> v24   [style=bold, label=" (connection)"];
   v24 -> v25   [style=bold, label=" (statement)"];
   v25 -> v26   [style=bold, label=" (rs)"];
   v28 -> v33   [style=bold, label=" (e)"];
   v8 -> v9   [style=bold, label=" (values)"];
   v8 -> v10   [style=bold, label=" (values)"];
   v10 -> v16   [style=bold, label=" (param)"];
  // end-of-graph
}
