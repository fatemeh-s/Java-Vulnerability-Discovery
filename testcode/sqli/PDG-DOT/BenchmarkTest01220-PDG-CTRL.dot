digraph BenchmarkTest01220_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  String param = ''"];
  v7  [label="44:  java.util.Enumeration<String> headers = request.getHeaders('vector')"];
  v8  [label="45:  if (headers.hasMoreElements())"];
  v9  [label="THEN"];
  v10  [label="46:  param = headers.nextElement()"];
  v11  [label="48:  param = java.net.URLDecoder.decode(param, 'UTF-8')"];
  v12  [label="51:  String bar = new Test().doSomething(param)"];
  v13  [label="53:  String sql = 'INSERT INTO users (username, password) VALUES ('foo',''+ bar + '')'"];
  v14  [label="55:  try"];
  v15  [label="56:  java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement()"];
  v16  [label="57:  int count = statement.executeUpdate( sql )"];
  v17  [label="58:  org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response)"];
  v18  [label="59:  catch (java.sql.SQLException e)"];
  v19  [label="60:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v20  [label="THEN"];
  v21  [label="61:  response.getWriter().println('Error processing request.')"];
  v22  [label="62:  return;"];
  v23  [label="ELSE"];
  v24  [label="64:  throw new ServletException(e);"];
  v25  [label="exit"];
  v26  [label="70:  String doSomething(String param)"];
  v27  [label="72:  String bar"];
  v28  [label="75:  int num = 106"];
  v29  [label="77:  bar = (7*18) + num > 200 ? 'This_should_always_happen' : param"];
  v30  [label="80:  return bar;"];
  v31  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v8 -> v9  [label="True"];
  v9 -> v10;
  v4 -> v11;
  v4 -> v12;
  v4 -> v13;
  v4 -> v14;
  v14 -> v15;
  v14 -> v16;
  v14 -> v17;
  v14 -> v18  [label="Throws"];
  v18 -> v19;
  v19 -> v20  [label="True"];
  v20 -> v21;
  v20 -> v22;
  v19 -> v23  [label="False"];
  v23 -> v24;
  v4 -> v25;
  v26 -> v27;
  v26 -> v28;
  v26 -> v29;
  v26 -> v30;
  v26 -> v31;
  // end-of-graph
}
