digraph BenchmarkTest02090_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  String param = ''"];
  v7  [label="44:  java.util.Enumeration<String> headers = request.getHeaders('vector')"];
  v8  [label="45:  if (headers.hasMoreElements())"];
  v9  [label="THEN"];
  v10  [label="46:  param = headers.nextElement()"];
  v11  [label="48:  param = java.net.URLDecoder.decode(param, 'UTF-8')"];
  v12  [label="51:  String bar = doSomething(param)"];
  v13  [label="53:  try"];
  v14  [label="54:  String sql = 'SELECT * from USERS where USERNAME='foo' and PASSWORD=''
	            + bar + '''"];
  v15  [label="57:  org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.execute(sql)"];
  v16  [label="58:  java.io.PrintWriter out = response.getWriter()"];
  v17  [label="60:  out.write('No results can be displayed for query: ' + org.owasp.esapi.ESAPI.encoder().encodeForHTML(sql) + '<br>')"];
  v18  [label="61:  out.write(' because the Spring execute method doesn't return results.')"];
  v19  [label="62:  catch (org.springframework.dao.DataAccessException e)"];
  v20  [label="63:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v21  [label="THEN"];
  v22  [label="64:  response.getWriter().println('Error processing request.')"];
  v23  [label="65:  return;"];
  v24  [label="ELSE"];
  v25  [label="67:  throw new ServletException(e);"];
  v26  [label="exit"];
  v27  [label="71:  String doSomething(String param)"];
  v28  [label="73:  String bar"];
  v29  [label="74:  String guess = 'ABC'"];
  v30  [label="75:  char switchTarget = guess.charAt(2)"];
  v31  [label="78:  switch (switchTarget)"];
  v32  [label="79:  case 'A':"];
  v33  [label="THEN"];
  v34  [label="ELSE"];
  v35  [label="80:  bar = param"];
  v36  [label="81:  break;"];
  v37  [label="FOLLOW-1"];
  v38  [label="82:  case 'B':"];
  v39  [label="THEN"];
  v40  [label="ELSE"];
  v41  [label="83:  bar = 'bobs_your_uncle'"];
  v42  [label="84:  break;"];
  v43  [label="FOLLOW-2"];
  v44  [label="85:  case 'C':"];
  v45  [label="THEN"];
  v46  [label="86:  case 'D':"];
  v47  [label="ELSE"];
  v48  [label="87:  bar = param"];
  v49  [label="88:  break;"];
  v50  [label="FOLLOW-3"];
  v51  [label="89:  default:"];
  v52  [label="90:  bar = 'bobs_your_uncle'"];
  v53  [label="91:  break;"];
  v54  [label="94:  return bar;"];
  v55  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v8 -> v9  [label="True"];
  v9 -> v10;
  v4 -> v11;
  v4 -> v12;
  v4 -> v13;
  v13 -> v14;
  v13 -> v15;
  v13 -> v16;
  v13 -> v17;
  v13 -> v18;
  v13 -> v19  [label="Throws"];
  v19 -> v20;
  v20 -> v21  [label="True"];
  v21 -> v22;
  v21 -> v23;
  v20 -> v24  [label="False"];
  v24 -> v25;
  v4 -> v26;
  v27 -> v28;
  v27 -> v29;
  v27 -> v30;
  v27 -> v31;
  v31 -> v32;
  v32 -> v33  [label="True"];
  v33 -> v35;
  v33 -> v36;
  v32 -> v34  [label="False"];
  v34 -> v37;
  v37 -> v38;
  v38 -> v39  [label="True"];
  v39 -> v41;
  v39 -> v42;
  v38 -> v40  [label="False"];
  v40 -> v43;
  v43 -> v44;
  v44 -> v45  [label="True"];
  v44 -> v46  [label="False"];
  v46 -> v45  [label="True"];
  v45 -> v48;
  v45 -> v49;
  v46 -> v47  [label="False"];
  v47 -> v50;
  v50 -> v51;
  v50 -> v52;
  v50 -> v53;
  v27 -> v54;
  v27 -> v55;
  // end-of-graph
}
