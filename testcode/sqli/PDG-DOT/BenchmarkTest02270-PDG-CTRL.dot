digraph BenchmarkTest02270_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  java.util.Map<String,String[]> map = request.getParameterMap()"];
  v7  [label="44:  String param = ''"];
  v8  [label="45:  if (!map.isEmpty())"];
  v9  [label="THEN"];
  v10  [label="46:  String[] values = map.get('vector')"];
  v11  [label="47:  if (values != null)"];
  v12  [label="THEN"];
  v13  [label="47:  param = values[0]"];
  v14  [label="51:  String bar = doSomething(param)"];
  v15  [label="53:  String sql = 'SELECT * from USERS where USERNAME=? and PASSWORD=''+ bar +'''"];
  v16  [label="55:  try"];
  v17  [label="56:  java.sql.Connection connection = org.owasp.benchmark.helpers.DatabaseHelper.getSqlConnection()"];
  v18  [label="57:  java.sql.PreparedStatement statement = connection.prepareStatement( sql,
				java.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY, 
				java.sql.ResultSet.CLOSE_CURSORS_AT_COMMIT )"];
  v19  [label="60:  statement.setString(1, 'foo')"];
  v20  [label="61:  statement.execute()"];
  v21  [label="62:  org.owasp.benchmark.helpers.DatabaseHelper.printResults(statement, sql, response)"];
  v22  [label="63:  catch (java.sql.SQLException e)"];
  v23  [label="64:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v24  [label="THEN"];
  v25  [label="65:  response.getWriter().println('Error processing request.')"];
  v26  [label="66:  return;"];
  v27  [label="ELSE"];
  v28  [label="68:  throw new ServletException(e);"];
  v29  [label="exit"];
  v30  [label="72:  String doSomething(String param)"];
  v31  [label="74:  String bar"];
  v32  [label="75:  String guess = 'ABC'"];
  v33  [label="76:  char switchTarget = guess.charAt(2)"];
  v34  [label="79:  switch (switchTarget)"];
  v35  [label="80:  case 'A':"];
  v36  [label="THEN"];
  v37  [label="ELSE"];
  v38  [label="81:  bar = param"];
  v39  [label="82:  break;"];
  v40  [label="FOLLOW-1"];
  v41  [label="83:  case 'B':"];
  v42  [label="THEN"];
  v43  [label="ELSE"];
  v44  [label="84:  bar = 'bobs_your_uncle'"];
  v45  [label="85:  break;"];
  v46  [label="FOLLOW-2"];
  v47  [label="86:  case 'C':"];
  v48  [label="THEN"];
  v49  [label="87:  case 'D':"];
  v50  [label="ELSE"];
  v51  [label="88:  bar = param"];
  v52  [label="89:  break;"];
  v53  [label="FOLLOW-3"];
  v54  [label="90:  default:"];
  v55  [label="91:  bar = 'bobs_your_uncle'"];
  v56  [label="92:  break;"];
  v57  [label="95:  return bar;"];
  v58  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v8 -> v9  [label="True"];
  v9 -> v10;
  v9 -> v11;
  v11 -> v12  [label="True"];
  v12 -> v13;
  v4 -> v14;
  v4 -> v15;
  v4 -> v16;
  v16 -> v17;
  v16 -> v18;
  v16 -> v19;
  v16 -> v20;
  v16 -> v21;
  v16 -> v22  [label="Throws"];
  v22 -> v23;
  v23 -> v24  [label="True"];
  v24 -> v25;
  v24 -> v26;
  v23 -> v27  [label="False"];
  v27 -> v28;
  v4 -> v29;
  v30 -> v31;
  v30 -> v32;
  v30 -> v33;
  v30 -> v34;
  v34 -> v35;
  v35 -> v36  [label="True"];
  v36 -> v38;
  v36 -> v39;
  v35 -> v37  [label="False"];
  v37 -> v40;
  v40 -> v41;
  v41 -> v42  [label="True"];
  v42 -> v44;
  v42 -> v45;
  v41 -> v43  [label="False"];
  v43 -> v46;
  v46 -> v47;
  v47 -> v48  [label="True"];
  v47 -> v49  [label="False"];
  v49 -> v48  [label="True"];
  v48 -> v51;
  v48 -> v52;
  v49 -> v50  [label="False"];
  v50 -> v53;
  v53 -> v54;
  v53 -> v55;
  v53 -> v56;
  v30 -> v57;
  v30 -> v58;
  // end-of-graph
}
