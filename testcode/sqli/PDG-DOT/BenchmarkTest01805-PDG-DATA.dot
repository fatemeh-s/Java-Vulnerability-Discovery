digraph BenchmarkTest01805_PDG_DATA {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  org.owasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request )"];
  v6  [label="44:  String param = scr.getTheValue('vector')"];
  v7  [label="46:  String bar = new Test().doSomething(param)"];
  v8  [label="48:  String sql = 'SELECT * from USERS where USERNAME=? and PASSWORD=''+ bar +'''"];
  v9  [label="50:  try"];
  v10  [label="end-try"];
  v11  [label="51:  java.sql.Connection connection = org.owasp.benchmark.helpers.DatabaseHelper.getSqlConnection()"];
  v12  [label="52:  java.sql.PreparedStatement statement = connection.prepareStatement( sql,
				java.sql.ResultSet.TYPE_FORWARD_ONLY, java.sql.ResultSet.CONCUR_READ_ONLY )"];
  v13  [label="54:  statement.setString(1, 'foo')"];
  v14  [label="55:  statement.execute()"];
  v15  [label="56:  org.owasp.benchmark.helpers.DatabaseHelper.printResults(statement, sql, response)"];
  v16  [label="end-catch"];
  v17  [label="57:  catch (java.sql.SQLException e)"];
  v18  [label="58:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v19  [label="59:  response.getWriter().println('Error processing request.')"];
  v20  [label="60:  return;"];
  v21  [label="endif"];
  v22  [label="62:  throw new ServletException(e)"];
  v23  [label="68:  String doSomething(String param)"];
  v24  [label="70:  String bar = 'safe!'"];
  v25  [label="71:  java.util.HashMap<String,Object> map20030 = new java.util.HashMap<String,Object>()"];
  v26  [label="72:  map20030.put('keyA-20030', 'a_Value')"];
  v27  [label="73:  map20030.put('keyB-20030', param)"];
  v28  [label="74:  map20030.put('keyC', 'another_Value')"];
  v29  [label="75:  bar = (String)map20030.get('keyB-20030')"];
  v30  [label="76:  bar = (String)map20030.get('keyA-20030')"];
  v31  [label="78:  return bar;"];
  // graph-edges
  v1 -> v2  [arrowhead=empty, color=gray, style=dashed, label=""];
  v3 -> v4  [arrowhead=empty, color=gray, style=dashed, label=""];
  v4 -> v5  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v6  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v7  [arrowhead=empty, color=gray, style=dashed, label=""];
  v7 -> v8  [arrowhead=empty, color=gray, style=dashed, label=""];
  v8 -> v9  [arrowhead=empty, color=gray, style=dashed, label=""];
  v9 -> v11  [arrowhead=empty, color=gray, style=dashed, label=""];
  v11 -> v12  [arrowhead=empty, color=gray, style=dashed, label=""];
  v12 -> v13  [arrowhead=empty, color=gray, style=dashed, label=""];
  v13 -> v14  [arrowhead=empty, color=gray, style=dashed, label=""];
  v14 -> v15  [arrowhead=empty, color=gray, style=dashed, label=""];
  v15 -> v10  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v17  [arrowhead=empty, color=gray, style=dashed, label="Throws"];
  v17 -> v18  [arrowhead=empty, color=gray, style=dashed, label=""];
  v18 -> v19  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v19 -> v20  [arrowhead=empty, color=gray, style=dashed, label=""];
  v18 -> v22  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v22 -> v10  [arrowhead=empty, color=gray, style=dashed, label="Throws"];
  v21 -> v16  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v10  [arrowhead=empty, color=gray, style=dashed, label=""];
  v23 -> v24  [arrowhead=empty, color=gray, style=dashed, label=""];
  v24 -> v25  [arrowhead=empty, color=gray, style=dashed, label=""];
  v25 -> v26  [arrowhead=empty, color=gray, style=dashed, label=""];
  v26 -> v27  [arrowhead=empty, color=gray, style=dashed, label=""];
  v27 -> v28  [arrowhead=empty, color=gray, style=dashed, label=""];
  v28 -> v29  [arrowhead=empty, color=gray, style=dashed, label=""];
  v29 -> v30  [arrowhead=empty, color=gray, style=dashed, label=""];
  v30 -> v31  [arrowhead=empty, color=gray, style=dashed, label=""];
   v1 -> v2   [style=bold, label=" (request)"];
   v1 -> v2   [style=bold, label=" (response)"];
   v3 -> v5   [style=bold, label=" (request)"];
   v3 -> v4   [style=bold, label=" (response)"];
   v3 -> v15   [style=bold, label=" (response)"];
   v3 -> v19   [style=bold, label=" (response)"];
   v5 -> v6   [style=bold, label=" (scr)"];
   v6 -> v7   [style=bold, label=" (param)"];
   v7 -> v8   [style=bold, label=" (bar)"];
   v8 -> v12   [style=bold, label=" (sql)"];
   v8 -> v15   [style=bold, label=" (sql)"];
   v11 -> v12   [style=bold, label=" (connection)"];
   v12 -> v13   [style=bold, label=" (statement)"];
   v12 -> v14   [style=bold, label=" (statement)"];
   v12 -> v15   [style=bold, label=" (statement)"];
   v17 -> v22   [style=bold, label=" (e)"];
   v23 -> v27   [style=bold, label=" (param)"];
   v25 -> v26   [style=bold, label=" (map20030)"];
   v25 -> v27   [style=bold, label=" (map20030)"];
   v25 -> v28   [style=bold, label=" (map20030)"];
   v25 -> v29   [style=bold, label=" (map20030)"];
   v25 -> v30   [style=bold, label=" (map20030)"];
   v30 -> v31   [style=bold, label=" (bar)"];
  // end-of-graph
}
