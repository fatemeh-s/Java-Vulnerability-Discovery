digraph BenchmarkTest02360_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  String param = ''"];
  v7  [label="44:  boolean flag = true"];
  v8  [label="45:  java.util.Enumeration<String> names = request.getParameterNames()"];
  v9  [label="46:  while (names.hasMoreElements() && flag)"];
  v10  [label="LOOP"];
  v11  [label="47:  String name = (String) names.nextElement()"];
  v12  [label="48:  String[] values = request.getParameterValues(name)"];
  v13  [label="49:  if (values != null)"];
  v14  [label="THEN"];
  v15  [label="50:  int i=0"];
  v16  [label="50:  for (i<values.length && flag)"];
  v17  [label="LOOP"];
  v18  [label="51:  String value = values[i]"];
  v19  [label="52:  if (value.equals('vector'))"];
  v20  [label="THEN"];
  v21  [label="53:  param = name"];
  v22  [label="54:  flag = false"];
  v23  [label="50:  i++"];
  v24  [label="60:  String bar = doSomething(param)"];
  v25  [label="62:  try"];
  v26  [label="63:  String sql = 'SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD=''+ bar + '''"];
  v27  [label="65:  Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql)"];
  v28  [label="66:  java.io.PrintWriter out = response.getWriter()"];
  v29  [label="67:  out.write('Your results are: ')"];
  v30  [label="69:  out.write(results.toString())"];
  v31  [label="71:  catch (org.springframework.dao.DataAccessException e)"];
  v32  [label="72:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v33  [label="THEN"];
  v34  [label="73:  response.getWriter().println('Error processing request.')"];
  v35  [label="74:  return;"];
  v36  [label="ELSE"];
  v37  [label="76:  throw new ServletException(e);"];
  v38  [label="exit"];
  v39  [label="80:  String doSomething(String param)"];
  v40  [label="82:  String bar"];
  v41  [label="83:  String guess = 'ABC'"];
  v42  [label="84:  char switchTarget = guess.charAt(2)"];
  v43  [label="87:  switch (switchTarget)"];
  v44  [label="88:  case 'A':"];
  v45  [label="THEN"];
  v46  [label="ELSE"];
  v47  [label="89:  bar = param"];
  v48  [label="90:  break;"];
  v49  [label="FOLLOW-1"];
  v50  [label="91:  case 'B':"];
  v51  [label="THEN"];
  v52  [label="ELSE"];
  v53  [label="92:  bar = 'bobs_your_uncle'"];
  v54  [label="93:  break;"];
  v55  [label="FOLLOW-2"];
  v56  [label="94:  case 'C':"];
  v57  [label="THEN"];
  v58  [label="95:  case 'D':"];
  v59  [label="ELSE"];
  v60  [label="96:  bar = param"];
  v61  [label="97:  break;"];
  v62  [label="FOLLOW-3"];
  v63  [label="98:  default:"];
  v64  [label="99:  bar = 'bobs_your_uncle'"];
  v65  [label="100:  break;"];
  v66  [label="103:  return bar;"];
  v67  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v4 -> v9;
  v9 -> v10  [label="True"];
  v10 -> v11;
  v10 -> v12;
  v10 -> v13;
  v13 -> v14  [label="True"];
  v14 -> v15;
  v14 -> v16;
  v16 -> v17  [label="True"];
  v17 -> v18;
  v17 -> v19;
  v19 -> v20  [label="True"];
  v20 -> v21;
  v20 -> v22;
  v17 -> v23;
  v4 -> v24;
  v4 -> v25;
  v25 -> v26;
  v25 -> v27;
  v25 -> v28;
  v25 -> v29;
  v25 -> v30;
  v25 -> v31  [label="Throws"];
  v31 -> v32;
  v32 -> v33  [label="True"];
  v33 -> v34;
  v33 -> v35;
  v32 -> v36  [label="False"];
  v36 -> v37;
  v4 -> v38;
  v39 -> v40;
  v39 -> v41;
  v39 -> v42;
  v39 -> v43;
  v43 -> v44;
  v44 -> v45  [label="True"];
  v45 -> v47;
  v45 -> v48;
  v44 -> v46  [label="False"];
  v46 -> v49;
  v49 -> v50;
  v50 -> v51  [label="True"];
  v51 -> v53;
  v51 -> v54;
  v50 -> v52  [label="False"];
  v52 -> v55;
  v55 -> v56;
  v56 -> v57  [label="True"];
  v56 -> v58  [label="False"];
  v58 -> v57  [label="True"];
  v57 -> v60;
  v57 -> v61;
  v58 -> v59  [label="False"];
  v59 -> v62;
  v62 -> v63;
  v62 -> v64;
  v62 -> v65;
  v39 -> v66;
  v39 -> v67;
  // end-of-graph
}
