digraph BenchmarkTest00843_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  String queryString = request.getQueryString()"];
  v7  [label="44:  String paramval = 'vector'+'='"];
  v8  [label="45:  int paramLoc = -1"];
  v9  [label="46:  if (queryString != null)"];
  v10  [label="THEN"];
  v11  [label="46:  paramLoc = queryString.indexOf(paramval)"];
  v12  [label="47:  if (paramLoc == -1)"];
  v13  [label="THEN"];
  v14  [label="48:  response.getWriter().println('getQueryString() couldn't find expected parameter '' + 'vector' + '' in query string.')"];
  v15  [label="49:  return;"];
  v16  [label="ELSE"];
  v17  [label="FOLLOW-1"];
  v18  [label="52:  String param = queryString.substring(paramLoc + paramval.length())"];
  v19  [label="54:  int ampersandLoc = queryString.indexOf('&', paramLoc)"];
  v20  [label="55:  if (ampersandLoc != -1)"];
  v21  [label="THEN"];
  v22  [label="56:  param = queryString.substring(paramLoc + paramval.length(), ampersandLoc)"];
  v23  [label="58:  param = java.net.URLDecoder.decode(param, 'UTF-8')"];
  v24  [label="61:  String bar = 'safe!'"];
  v25  [label="62:  java.util.HashMap<String,Object> map55156 = new java.util.HashMap<String,Object>()"];
  v26  [label="63:  map55156.put('keyA-55156', 'a Value')"];
  v27  [label="64:  map55156.put('keyB-55156', param)"];
  v28  [label="65:  map55156.put('keyC', 'another Value')"];
  v29  [label="66:  bar = (String)map55156.get('keyB-55156')"];
  v30  [label="69:  try"];
  v31  [label="70:  String sql = 'SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD=''+ bar + '''"];
  v32  [label="72:  Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql)"];
  v33  [label="73:  java.io.PrintWriter out = response.getWriter()"];
  v34  [label="74:  out.write('Your results are: ')"];
  v35  [label="76:  out.write(results.toString())"];
  v36  [label="78:  catch (org.springframework.dao.DataAccessException e)"];
  v37  [label="79:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v38  [label="THEN"];
  v39  [label="80:  response.getWriter().println('Error processing request.')"];
  v40  [label="81:  return;"];
  v41  [label="ELSE"];
  v42  [label="83:  throw new ServletException(e);"];
  v43  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v4 -> v9;
  v9 -> v10  [label="True"];
  v10 -> v11;
  v4 -> v12;
  v12 -> v13  [label="True"];
  v13 -> v14;
  v13 -> v15;
  v12 -> v16  [label="False"];
  v16 -> v17;
  v17 -> v18;
  v17 -> v19;
  v17 -> v20;
  v20 -> v21  [label="True"];
  v21 -> v22;
  v17 -> v23;
  v17 -> v24;
  v17 -> v25;
  v17 -> v26;
  v17 -> v27;
  v17 -> v28;
  v17 -> v29;
  v17 -> v30;
  v30 -> v31;
  v30 -> v32;
  v30 -> v33;
  v30 -> v34;
  v30 -> v35;
  v30 -> v36  [label="Throws"];
  v36 -> v37;
  v37 -> v38  [label="True"];
  v38 -> v39;
  v38 -> v40;
  v37 -> v41  [label="False"];
  v41 -> v42;
  v4 -> v43;
  // end-of-graph
}
