digraph BenchmarkTest02735_PDG_CTRL {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="exit"];
  v4  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v5  [label="41:  response.setContentType('text/html')"];
  v6  [label="43:  org.owasp.benchmark.helpers.SeparateClassRequest scr = new org.owasp.benchmark.helpers.SeparateClassRequest( request )"];
  v7  [label="44:  String param = scr.getTheValue('vector')"];
  v8  [label="46:  String bar = doSomething(param)"];
  v9  [label="48:  try"];
  v10  [label="49:  String sql = 'SELECT TOP 1 userid from USERS where USERNAME='foo' and PASSWORD=''+ bar + '''"];
  v11  [label="51:  Long results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForLong(sql)"];
  v12  [label="52:  java.io.PrintWriter out = response.getWriter()"];
  v13  [label="53:  out.write('Your results are: ')"];
  v14  [label="55:  out.write(results.toString())"];
  v15  [label="57:  catch (org.springframework.dao.DataAccessException e)"];
  v16  [label="58:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v17  [label="THEN"];
  v18  [label="59:  response.getWriter().println('Error processing request.')"];
  v19  [label="60:  return;"];
  v20  [label="ELSE"];
  v21  [label="62:  throw new ServletException(e);"];
  v22  [label="exit"];
  v23  [label="66:  String doSomething(String param)"];
  v24  [label="68:  String bar"];
  v25  [label="69:  String guess = 'ABC'"];
  v26  [label="70:  char switchTarget = guess.charAt(1)"];
  v27  [label="73:  switch (switchTarget)"];
  v28  [label="74:  case 'A':"];
  v29  [label="THEN"];
  v30  [label="ELSE"];
  v31  [label="75:  bar = param"];
  v32  [label="76:  break;"];
  v33  [label="FOLLOW-1"];
  v34  [label="77:  case 'B':"];
  v35  [label="THEN"];
  v36  [label="ELSE"];
  v37  [label="78:  bar = 'bob'"];
  v38  [label="79:  break;"];
  v39  [label="FOLLOW-2"];
  v40  [label="80:  case 'C':"];
  v41  [label="THEN"];
  v42  [label="81:  case 'D':"];
  v43  [label="ELSE"];
  v44  [label="82:  bar = param"];
  v45  [label="83:  break;"];
  v46  [label="FOLLOW-3"];
  v47  [label="84:  default:"];
  v48  [label="85:  bar = 'bob's your uncle'"];
  v49  [label="86:  break;"];
  v50  [label="89:  return bar;"];
  v51  [label="exit"];
  // graph-edges
  v1 -> v2;
  v1 -> v3;
  v4 -> v5;
  v4 -> v6;
  v4 -> v7;
  v4 -> v8;
  v4 -> v9;
  v9 -> v10;
  v9 -> v11;
  v9 -> v12;
  v9 -> v13;
  v9 -> v14;
  v9 -> v15  [label="Throws"];
  v15 -> v16;
  v16 -> v17  [label="True"];
  v17 -> v18;
  v17 -> v19;
  v16 -> v20  [label="False"];
  v20 -> v21;
  v4 -> v22;
  v23 -> v24;
  v23 -> v25;
  v23 -> v26;
  v23 -> v27;
  v27 -> v28;
  v28 -> v29  [label="True"];
  v29 -> v31;
  v29 -> v32;
  v28 -> v30  [label="False"];
  v30 -> v33;
  v33 -> v34;
  v34 -> v35  [label="True"];
  v35 -> v37;
  v35 -> v38;
  v34 -> v36  [label="False"];
  v36 -> v39;
  v39 -> v40;
  v40 -> v41  [label="True"];
  v40 -> v42  [label="False"];
  v42 -> v41  [label="True"];
  v41 -> v44;
  v41 -> v45;
  v42 -> v43  [label="False"];
  v43 -> v46;
  v46 -> v47;
  v46 -> v48;
  v46 -> v49;
  v23 -> v50;
  v23 -> v51;
  // end-of-graph
}
