digraph BenchmarkTest01089_PDG_DATA {
  // graph-vertices
  v1  [label="35:  void doGet(HttpServletRequest request, HttpServletResponse response)"];
  v2  [label="36:  doPost(request, response)"];
  v3  [label="40:  void doPost(HttpServletRequest request, HttpServletResponse response)"];
  v4  [label="41:  response.setContentType('text/html')"];
  v5  [label="43:  String param = request.getHeader('vector')"];
  v6  [label="44:  if (param == null)"];
  v7  [label="44:  param = ''"];
  v8  [label="endif"];
  v9  [label="45:  param = java.net.URLDecoder.decode(param, 'UTF-8')"];
  v10  [label="47:  if (param == null)"];
  v11  [label="47:  param = ''"];
  v12  [label="endif"];
  v13  [label="49:  String bar = new Test().doSomething(param)"];
  v14  [label="51:  try"];
  v15  [label="end-try"];
  v16  [label="52:  String sql = 'SELECT TOP 1 USERNAME from USERS where USERNAME='foo' and PASSWORD=''+ bar + '''"];
  v17  [label="54:  Object results = org.owasp.benchmark.helpers.DatabaseHelper.JDBCtemplate.queryForObject(sql,new Object[]{}, String.class)"];
  v18  [label="55:  java.io.PrintWriter out = response.getWriter()"];
  v19  [label="56:  out.write('Your results are: ')"];
  v20  [label="58:  out.write(org.owasp.esapi.ESAPI.encoder().encodeForHTML(results.toString()))"];
  v21  [label="end-catch"];
  v22  [label="60:  catch (org.springframework.dao.DataAccessException e)"];
  v23  [label="61:  if (org.owasp.benchmark.helpers.DatabaseHelper.hideSQLErrors)"];
  v24  [label="62:  response.getWriter().println('Error processing request.')"];
  v25  [label="63:  return;"];
  v26  [label="endif"];
  v27  [label="65:  throw new ServletException(e)"];
  v28  [label="71:  String doSomething(String param)"];
  v29  [label="73:  String bar = 'safe!'"];
  v30  [label="74:  java.util.HashMap<String,Object> map79782 = new java.util.HashMap<String,Object>()"];
  v31  [label="75:  map79782.put('keyA-79782', 'a_Value')"];
  v32  [label="76:  map79782.put('keyB-79782', param)"];
  v33  [label="77:  map79782.put('keyC', 'another_Value')"];
  v34  [label="78:  bar = (String)map79782.get('keyB-79782')"];
  v35  [label="79:  bar = (String)map79782.get('keyA-79782')"];
  v36  [label="81:  return bar;"];
  // graph-edges
  v1 -> v2  [arrowhead=empty, color=gray, style=dashed, label=""];
  v3 -> v4  [arrowhead=empty, color=gray, style=dashed, label=""];
  v4 -> v5  [arrowhead=empty, color=gray, style=dashed, label=""];
  v5 -> v6  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v7  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v7 -> v8  [arrowhead=empty, color=gray, style=dashed, label=""];
  v6 -> v8  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v8 -> v9  [arrowhead=empty, color=gray, style=dashed, label=""];
  v9 -> v10  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v11  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v11 -> v12  [arrowhead=empty, color=gray, style=dashed, label=""];
  v10 -> v12  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v12 -> v13  [arrowhead=empty, color=gray, style=dashed, label=""];
  v13 -> v14  [arrowhead=empty, color=gray, style=dashed, label=""];
  v14 -> v16  [arrowhead=empty, color=gray, style=dashed, label=""];
  v16 -> v17  [arrowhead=empty, color=gray, style=dashed, label=""];
  v17 -> v18  [arrowhead=empty, color=gray, style=dashed, label=""];
  v18 -> v19  [arrowhead=empty, color=gray, style=dashed, label=""];
  v19 -> v20  [arrowhead=empty, color=gray, style=dashed, label=""];
  v20 -> v15  [arrowhead=empty, color=gray, style=dashed, label=""];
  v15 -> v22  [arrowhead=empty, color=gray, style=dashed, label="Throws"];
  v22 -> v23  [arrowhead=empty, color=gray, style=dashed, label=""];
  v23 -> v24  [arrowhead=empty, color=gray, style=dashed, label="True"];
  v24 -> v25  [arrowhead=empty, color=gray, style=dashed, label=""];
  v23 -> v27  [arrowhead=empty, color=gray, style=dashed, label="False"];
  v27 -> v15  [arrowhead=empty, color=gray, style=dashed, label="Throws"];
  v26 -> v21  [arrowhead=empty, color=gray, style=dashed, label=""];
  v21 -> v15  [arrowhead=empty, color=gray, style=dashed, label=""];
  v28 -> v29  [arrowhead=empty, color=gray, style=dashed, label=""];
  v29 -> v30  [arrowhead=empty, color=gray, style=dashed, label=""];
  v30 -> v31  [arrowhead=empty, color=gray, style=dashed, label=""];
  v31 -> v32  [arrowhead=empty, color=gray, style=dashed, label=""];
  v32 -> v33  [arrowhead=empty, color=gray, style=dashed, label=""];
  v33 -> v34  [arrowhead=empty, color=gray, style=dashed, label=""];
  v34 -> v35  [arrowhead=empty, color=gray, style=dashed, label=""];
  v35 -> v36  [arrowhead=empty, color=gray, style=dashed, label=""];
   v1 -> v2   [style=bold, label=" (request)"];
   v1 -> v2   [style=bold, label=" (response)"];
   v3 -> v5   [style=bold, label=" (request)"];
   v3 -> v4   [style=bold, label=" (response)"];
   v3 -> v18   [style=bold, label=" (response)"];
   v3 -> v24   [style=bold, label=" (response)"];
   v5 -> v6   [style=bold, label=" (param)"];
   v5 -> v9   [style=bold, label=" (param)"];
   v9 -> v10   [style=bold, label=" (param)"];
   v9 -> v13   [style=bold, label=" (param)"];
   v13 -> v16   [style=bold, label=" (bar)"];
   v16 -> v17   [style=bold, label=" (sql)"];
   v17 -> v20   [style=bold, label=" (results)"];
   v18 -> v19   [style=bold, label=" (out)"];
   v19 -> v20   [style=bold, label=" (out)"];
   v22 -> v27   [style=bold, label=" (e)"];
   v11 -> v13   [style=bold, label=" (param)"];
   v7 -> v9   [style=bold, label=" (param)"];
   v28 -> v32   [style=bold, label=" (param)"];
   v30 -> v31   [style=bold, label=" (map79782)"];
   v30 -> v32   [style=bold, label=" (map79782)"];
   v30 -> v33   [style=bold, label=" (map79782)"];
   v30 -> v34   [style=bold, label=" (map79782)"];
   v30 -> v35   [style=bold, label=" (map79782)"];
   v35 -> v36   [style=bold, label=" (bar)"];
  // end-of-graph
}
