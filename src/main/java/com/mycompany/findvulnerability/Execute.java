/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.findvulnerability;

/**
 *
 * @author Fatemeh Saligheh
 */
import java.io.File;
import java.io.IOException;
import java.nio.file.DirectoryNotEmptyException;
import java.nio.file.Files;
import java.nio.file.NoSuchFileException;
import java.nio.file.Paths;
import java.util.List;
import org.neo4j.driver.v1.AuthTokens;
import org.neo4j.driver.v1.Driver;
import org.neo4j.driver.v1.GraphDatabase;
import org.neo4j.driver.v1.Record;
import org.neo4j.driver.v1.Session;
import org.neo4j.driver.v1.StatementResult;
import org.neo4j.driver.v1.Transaction;
import org.neo4j.driver.v1.TransactionWork;
import static org.neo4j.driver.v1.Values.parameters;

public class Execute implements AutoCloseable {

    private final Driver driver;

    public Execute(String uri, String user, String password) {
        driver = GraphDatabase.driver(uri, AuthTokens.basic(user, password));
    }

    @Override
    public void close() throws Exception {
        driver.close();
    }
   

    public void findVulner(String inputDir , String Name) throws IOException {
        String myDirectoryPDGPath = "/PDG-JSON";
        String myDirectoryASTPath = "/AST-JSON";
//        String TypePath = "securecookie";
//        String TypePath = "sqli";
//        String TypePath = "xss";
//        String TypePath = "PathTraversal";
        String Path = inputDir;
        System.out.println("*********************************"+inputDir);
        File dir = new File(Path);
        File[] directoryListing = dir.listFiles();
        if (directoryListing != null) {
            for (File child : directoryListing) {
                try (Session session = driver.session()) {
                    String greeting = session.writeTransaction(new TransactionWork<String>() {
                        @Override
                        public String execute(Transaction tx) {
                            tx.run("MATCH (n)\n"
                                    + "DETACH DELETE n");

                            return null;

                        }
                    });
                }
                if (!child.getName().equals("Graphs")) {
                    String[] parts = (child.getName()).split(".java");
//                    System.out.println(parts.length);
                    LoadingGraphs lg = new LoadingGraphs(driver, Name+myDirectoryASTPath + "/" + parts[0] + "-AST.json", Name+myDirectoryPDGPath + "/" + parts[0] + "-PDG-DATA.json");
                    Query q = new Query(driver,child.getName());   
                }

            }
        } else {
            System.out.println("unknown directory");
        }

//        Query q = new Query(driver);
    }

//    public static void main(String... args) throws Exception {
//        System.out.println("hello neo4j");
//        try (Execute neo4j = new Execute("bolt://localhost:7687", "neo4j", "fatemeh110")) {
//            neo4j.printGreeting();
//        }
//    }
}
